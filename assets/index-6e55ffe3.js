import{z,y as Z,m as Q,E as _,x as N,G as R}from"./index-f17aeca0.js";const B='{\n    "id": 1,\n    "title": "macOS安装PHP+MySQL+Nginx+Composer环境",\n    "subTitle": "生产力工具配置",\n    "link": null,\n    "description": "斥巨资新买了电脑，记录一下配置过程~~开心心~~",\n    "content": "> 注意：不要去删除系统自带的Apache 和php 我开始就删除了系统自带的Apache，导致后面php一直无法安装成功，重装了Apache后才弄好，所以建议不要轻易删除系统自带的Apache和php，高手另说。\\n\\n\\n## 一、安装 homebrew\\nhomebrew是mac系统下特别好用的一个软件包工具，而且它的安装也是极为简单。\\n\\n网上有很多人直接给出了homebrew的安装命令，但是大部分的地址已经失效。在homebrew网站上 http://brew.sh/ ，正中间就是homebrew的安装命令，直接复制到你的终端里执行就可以了。\\n\\n``` bash\\n/usr/bin/ruby -e \\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\\"\\n```\\n\\nhomebrew安装完成了，我们再用brew来安装Nginx，有了brew后，安装就变得很简单了，不需要自己去make之类的。\\n\\n## 二、安装 MySql\\n\\n``` bash\\nbrew install mysql\\n```\\n\\n也是一句命令搞定，等执行完后，mysql也安装完毕，接下来就是对mysql的一些配置\\n\\n### 1、先cd到mysql的目录中\\n\\n``` bash\\ncd /usr/local/opt/mysql/\\n```\\n\\n### 2、加入launchctl启动控制\\n\\n``` bash\\nmkdir -p ~/Library/LaunchAgents/\\n\\ncp /usr/local/opt/mysql/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/\\n\\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\\n\\n#取消启动的命令\\nlaunchctl unload ~/Library/LaunchAgents/homebrew.mxcl.mysql.plis\\n```\\n\\n### 3、执行安全设置脚本,设置root账号密码,如果不执行这一步，是无法用`mysql -u root -p`这个命令登录mysql的\\n\\n``` bash\\n./bin/mysql_secure_installation\\n```\\n\\n执行上面的命令后，会进入mysql的配置,可以用`mysql -u root -p`来登录mysql\\n\\n> **注意：在navicat premium 12 & Mysql 8.0.11下连接报错**\\n\\n使用Navicat 12远程连接Mysql 8.0.11时会提示如下报错信息，从错误信息可知`caching_sha2_password`不能加载。\\n\\n```bash\\n2059 - Authentication plugin \'caching_sha2_password\' cannot be loaded\\n```\\n\\n以上报错是由于目前已有的客户端连接软件还不支持Mysql8新增加的加密方式`caching_sha2_password`，所以我们需要修改用户的加密方式，将其改为老的加密验证方式:\\n\\n- 1） 在安装Mysql数据库的主机上登录Mysql对应的用户，上面连接时用的用户为root，所以我们登录root用户。\\n\\n- 2）执行命令，查看当前用户的加密方式\\n\\n``` bash\\nuse mysql;\\n\\nselect user,plugin from user where user=\'root\';\\n# 可以看到当前用户的加密方式为caching_sha2_password\\n```\\n\\n- 3）执行命令，将用户的加密方式改为`mysql_native_password`\\n\\n``` bash\\nalter user \'root\'@\'localhost\' identified with mysql_native_password by \'password\';\\n```\\n\\n- 4）执行命令`flush privileges`使权限配置项立即生效。\\n\\n\\n## 三、安装nginx\\n\\n``` bash\\nbrew install nginx\\n```\\n\\n### 1、配置nginx\\n\\n#### 1-1 给nginx 设置管理员权限：如果不设置管理员权限，80端口是不能监听的\\n\\n``` bash\\n#这里的目录根据你实际安装的目录来填写，默认是这个目录，不同的只是nginx的版本号而已\\nsudo chown root:wheel /usr/local/Cellar/nginx/1.10.1/bin/nginx    \\nsudo chmod u+s /usr/local/Cellar/nginx/1.10.1/bin/nginx\\n```\\n\\n#### 1-2 加入launchctl启动控制\\n\\n``` bash\\nmkdir -p ~/Library/LaunchAgents\\ncp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/\\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist\\n```\\n\\n#### 1-3 到这里，nginx基本上是完工了。运行nginx ：\\n\\n``` bash\\nsudo nginx #打开 nginx\\nnginx -s reload|reopen|stop|quit  #重新加载配置|重启|停止|退出 nginx\\nnginx -t   #测试配置是否有语法错误\\n```\\n\\nOK, nginx就安装好了，可以在浏览器访问了，默认端口为8080，在浏览器输入 `http://localhost:8080/` 就能看到nginx在本计算机搭建的服务器\\n\\n![nginx安装成功](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/15/16c9411b97ff4bbd~tplv-t2oaga2asx-image.image)\\n\\n8080是nginx自带的默认网站设置的端口，现在我们自己来创建一个网站，设置端口和映射路径\\n\\n### 2、自定义网站端口\\n\\n#### 2-1 执行`vim /usr/local/etc/nginx/nginx.conf` 修改nginx 的配置文件，在最后一行加入：\\n\\n``` bash\\ninclude conf.d/*.conf;\\n```\\n\\n#### 2-2 新建相关文件：\\n\\n``` bash\\n# 新建文件夹\\nmkdir /usr/local/etc/nginx/conf.d\\n\\n# 新建文件\\ntouch /usr/local/etc/nginx/conf.d/test.conf\\nvim /usr/local/etc/nginx/conf.d/test.conf\\n```\\n\\n#### 2-3 .conf文件示例\\n\\n```nginx\\nserver {\\n    listen       80;\\n    server_name  www.test.com;\\n\\n    location / {\\n        try_files $uri $uri/ /index.php$is_args$query_string;\\n    \\troot \\"/Users/caishiyin/Sites/huiyu/test\\";\\n    \\tindex index.html index.htm index.php;\\n    }\\n\\n\\n    error_page   500 502 503 504  /50x.html;\\n    location = /50x.html {\\n        root   html;\\n    }\\n\\n    location ~ \\\\.php$ {\\n\\troot           \\"/Users/caishiyin/Sites/huiyu/test\\";\\n        fastcgi_pass   127.0.0.1:9000;\\n        fastcgi_index  indx.php;\\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\\n        include        fastcgi_params;\\n    }\\n\\n    location ~ /\\\\.ht {\\n        deny all;\\n    }\\n\\n}\\n```\\n\\n#### 2-4. 绑定自定义域名`sudo vim /etc/hosts`，在文件最后加入一行`127.0.0.1    nginx中配置的域名`\\n\\n## 四、安装php\\n\\n### 1、用homebrew安装php\\n\\nphp 的安装相对nginx和mysql来说，要复杂点，因为brew 默认没有php的包\\n\\n``` bash\\nbrew tap homebrew/dupes\\nbrew tap josegonzalez/homebrew-php\\n\\n# 这里执行brew tap homebrew/dupes会报错，可执行：\\ngit -C \\"$(brew --repo homebrew/core)\\" fetch --unshallow\\n```\\n\\n执行完上面命令后，这个时候才可以安装php,不过php有很多的版本,你可以用：`brew search php` 来查看具体的版本。这里安装7.1版本\\n``` bash\\nbrew install php71 --with-imap --with-tidy --with-debug --with-mysql --with-fpm\\n```\\n\\n### 2、php的配置\\n\\n安装成功后，就是对php的配置了，因为mac默认是自带php的，所以我们要把我们安装的php加到环境变量里，而不是继续使用mac自带的php\\n\\n``` bash\\nsudo vim ~/.bash_profile\\n# 在这个文件最后添加下列语句：\\nexport PATH=\\"$(brew --prefix php56)/bin:$PATH\\"\\n# 保存文件后，source下这个文件，使刚刚添加的环境变量生效\\nsource ~/.bash_profile\\n```\\n\\n这个时候，你在命令行里执行 php -v 看到的不再是系统自带的php了，而是我们刚刚安装的php\\n\\n### 3、加入launchctl启动控制\\n\\n``` bash\\nbashmkdir -p ~/Library/LaunchAgents\\ncp /usr/local/opt/php@7.1/homebrew.mxcl.php@7.1.plist ~/Library/LaunchAgents/\\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php@7.1.plist\\n```\\n\\n以上，php安装完毕\\n\\n### 4、php配置文件的存放路径\\n\\n```bash\\n/usr/local/etc/php/7.1/php.ini\\n/usr/local/etc/php/7.1/php-fpm.conf\\n\\n# 修改php-fpm端口：\\nvim /usr/local/etc/php/7.1/php-fpm.d/www.conf\\n```\\n\\n## 五、安装composer\\n\\n### 1、全局安装 运行命令行\\n\\n``` bash\\ncurl -sS https://getcomposer.org/installer | php \\n```\\n\\n### 2、移动安装包到/usr/local/bin\\n\\n``` bash\\nmv composer.phar /usr/local/bin/composer\\n```\\n\\nover.",\n    "tagIds": "26,27,20,19",\n    "author": "菜头",\n    "authorAvatar": "http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif",\n    "weight": 1,\n    "type": 1,\n    "groupTimestamp": "1544191936520",\n    "cover": "https://www.pp3.cn/uploads/201406/54545121522.jpg",\n    "categoryId": 2,\n    "created_at": "2023-11-06T14:15:49.000Z",\n    "updated_at": "2023-11-08T04:45:39.000Z",\n    "tagList": [\n        {\n            "id": 19,\n            "name": "Mysql"\n        },\n        {\n            "id": 20,\n            "name": "PHP"\n        },\n        {\n            "id": 26,\n            "name": "Nginx"\n        },\n        {\n            "id": 27,\n            "name": "Linux"\n        }\n    ],\n    "createDate": "2018-12-07"\n}',U=`{
    "id": 4,
    "title": "用exif.js和canvas解决ios手机拍照上传照片旋转90度的问题",
    "subTitle": "业务问题记录",
    "link": null,
    "description": "前段时间遇到iphone机型拍照上传作为头像，照片会自动旋转90度的问题。找了一些资料后，解决了这个问题，记录一下。",
    "content": "## 一、html页面部分\\n\\n\`\`\` html\\n<div class=\\"webuploader-container\\">\\n    <div class=\\"webuploader-pick\\">拍照</div>\\n    <div>\\n        <input\\n            type=\\"file\\"\\n            accept=\\"image/*\\"\\n            id=\\"capture\\"\\n            capture=\\"camera\\"\\n            style=\\"height: 44px;overflow: hidden;width: 180px;opacity: 0;\\"\\n        />\\n    </div>\\n</div>\\n\`\`\`\\n\\n## 二、页面业务逻辑部分（JQuery）\\n\\n\`\`\` javascript\\n<script> \\n$(\\"input#capture\\").on(\\"change\\", function() {\\n    $.showLoading(\\"上传中\\");\\n    var file = $(\\"#capture\\").get(0).files[0];\\n    // 图片旋转成功后的回调函数\\n    var callback = function(imgFile){    //这个imgFile就是旋转后图片\\n        var formData = new FormData();\\n        formData.append(\\"file\\", imgFile);\\n        // 上传图片到服务器\\n        $.ajax({\\n            method: \\"POST\\",\\n            url: \\"/user/upladHeader\\",\\n            data: formData,\\n            processData: false,\\n            dataType: \\"json\\",\\n            contentType: false,\\n            success: function(data) {\\n                if(data.data){\\n                    $.hideLoading();\\n                    $.toast(\\"操作成功\\", function() {\\n                    // ...\\n                    });\\n                }else {\\n                    $.hideLoading();\\n                    $.toast(\\"上传失败\\", \\"forbidden\\");\\n                }\\n            },\\n            error: function(data, e) {\\n                $.hideLoading();\\n                $.toast(\\"上传失败\\", \\"forbidden\\", function() {\\n                    window.location.href = newUrl + '&time='+((new Date()).getTime());\\n                });\\n             }\\n        });\\n    }\\n    // 调用翻转图片方法，回调函数会在图片翻转成功后执行\\n    rotatePhoto(file,callback)\\n});\\n<\/script>\\n\`\`\`\\n\\n## 三、最重要的js部分，图片翻转的逻辑\\n\\n**rotate-photo.js**\\n\\n\`\`\` javascript\\n/**\\n *对图片旋转处理\\n *\\n * @param {*} img\\n * @param {*} direction 旋转方向，left和right\\n * @param {*} canvas\\n * @returns\\n */\\nfunction rotateImg(img, direction, canvas) {\\n    //最小与最大旋转方向，图片旋转4次后回到原方向\\n    var min_step = 0;\\n    var max_step = 3;\\n\\n    //img的高度和宽度不能在img元素隐藏后获取，否则会出错\\n    if (img == null) {\\n        return;\\n    }\\n    var height = img.height;\\n    var width = img.width;\\n\\n    var step = 2;\\n    if (step == null) {\\n        step = min_step;\\n    }\\n    if (direction == 'right') {\\n        step++;\\n        //旋转到原位置，即超过最大值\\n        step > max_step && (step = min_step);\\n    } else {\\n        step--;\\n        step < min_step && (step = max_step);\\n    }\\n    //旋转角度以弧度值为参数\\n    var degree = step * 90 * Math.PI / 180;\\n    var ctx = canvas.getContext('2d');\\n    switch (step) {\\n        case 0:\\n            canvas.width = width;\\n            canvas.height = height;\\n            ctx.drawImage(img, 0, 0);\\n            break;\\n        case 1:\\n            canvas.width = height;\\n            canvas.height = width;\\n            ctx.rotate(degree);\\n            ctx.drawImage(img, 0, -height);\\n            break;\\n        case 2:\\n            canvas.width = width;\\n            canvas.height = height;\\n            ctx.rotate(degree);\\n            ctx.drawImage(img, -width, -height);\\n            break;\\n        case 3:\\n            canvas.width = height;\\n            canvas.height = width;\\n            ctx.rotate(degree);\\n            ctx.drawImage(img, -width, 0);\\n            break;\\n    }\\n}\\n\\n/**\\n *将base64转换成file对象\\n *\\n * @param {*} dataurl 图片的base64编码\\n * @param {*} filename file对象类型\\n * @returns\\n */\\nfunction dataURLtoFile(dataurl, filename = 'file') {\\n    let arr = dataurl.split(',')\\n    let mime = arr[0].match(/:(.*?);/)[1]\\n    let suffix = mime.split('/')[1]\\n    let bstr = atob(arr[1])\\n    let n = bstr.length\\n    let u8arr = new Uint8Array(n)\\n    while (n--) {\\n        u8arr[n] = bstr.charCodeAt(n)\\n    }\\n    return new File([u8arr], \`\${filename}.\${suffix}\`, {\\n        type: mime\\n    })\\n}\\n\\n/**\\n *旋转手机拍照变横后的照片\\n *\\n * @param {*} file 传入当前的input type=file\\n * @param {*} callback 回调函数，照片旋转后执行的事件\\n * @returns\\n */\\nfunction rotatePhoto(file, callback) {\\n    var Orientation = null;\\n    if (file) {\\n        console.log(\\"正在上传,请稍后...\\");\\n        var rFilter = /^(image\\\\/jpeg|image\\\\/png)$/i; // 检查图片格式\\n        if (!rFilter.test(file.type)) {\\n            return;\\n        }\\n\\n        //获取照片方向角属性，用户旋转控制\\n        EXIF.getData(file, function () {\\n            EXIF.getAllTags(this);\\n            Orientation = EXIF.getTag(this, 'Orientation');\\n        });\\n\\n        var oReader = new FileReader();\\n        oReader.onload = function (e) {\\n            var image = new Image();\\n            image.src = e.target.result;\\n            image.onload = function () {\\n                var expectWidth = this.naturalWidth;\\n                var expectHeight = this.naturalHeight;\\n                if (this.naturalWidth > this.naturalHeight && this.naturalWidth > 800) {\\n                    expectWidth = 800;\\n                    expectHeight = expectWidth * this.naturalHeight / this.naturalWidth;\\n                } else if (this.naturalHeight > this.naturalWidth && this.naturalHeight > 1200) {\\n                    expectHeight = 1200;\\n                    expectWidth = expectHeight * this.naturalWidth / this.naturalHeight;\\n                }\\n                var canvas = document.createElement(\\"canvas\\");\\n                var ctx = canvas.getContext(\\"2d\\");\\n                canvas.width = expectWidth;\\n                canvas.height = expectHeight;\\n                ctx.drawImage(this, 0, 0, expectWidth, expectHeight);\\n                var u = navigator.userAgent;\\n                if (Orientation != \\"\\" && Orientation != 1) {\\n                    //alert('旋转处理');\\n                    switch (Orientation) {\\n                        case 6: //需要顺时针（向左）90度旋转\\n                            console.log('需要顺时针（向左）90度旋转');\\n                            rotateImg(this, 'left', canvas);\\n                            break;\\n                        case 8: //需要逆时针（向右）90度旋转\\n                            console.log('需要逆时针（向右）90度旋转');\\n                            rotateImg(this, 'right', canvas);\\n                            break;\\n                        case 3: //需要180度旋转\\n                            console.log('需要180度旋转');\\n                            rotateImg(this, 'right', canvas); //转两次\\n                            rotateImg(this, 'right', canvas);\\n                            break;\\n                    }\\n                }\\n                base64 = canvas.toDataURL(\\"image/jpeg\\", 0.8);\\n                var type = 'jpeg';\\n                var fixtype = function (type) {\\n                    type = type.toLocaleLowerCase().replace(/jpg/i, 'jpeg');\\n                    var r = type.match(/png|jpeg|bmp|gif/)[0];\\n                    return 'image/' + r;\\n                };\\n                base64 = base64.replace(fixtype(type), 'image/jpeg');\\n                // 将base64转换成file对象\\n                var base64ToFile = dataURLtoFile(base64);\\n                //把已经旋转过的图片file对象通过回调函数返回\\n                callback(base64ToFile)\\n            };\\n        };\\n        oReader.readAsDataURL(file);\\n    }\\n}\\n\`\`\`\\n\\n## 四、附 exif.js代码\\n\\n**exif.js**\\n\\n\`\`\` javascript\\n(function() {\\n\\n    var debug = false;\\n\\n    var root = this;\\n\\n    var EXIF = function(obj) {\\n        if (obj instanceof EXIF) return obj;\\n        if (!(this instanceof EXIF)) return new EXIF(obj);\\n        this.EXIFwrapped = obj;\\n    };\\n\\n    if (typeof exports !== 'undefined') {\\n        if (typeof module !== 'undefined' && module.exports) {\\n            exports = module.exports = EXIF;\\n        }\\n        exports.EXIF = EXIF;\\n    } else {\\n        root.EXIF = EXIF;\\n    }\\n\\n    var ExifTags = EXIF.Tags = {\\n\\n        // version tags\\n        0x9000 : \\"ExifVersion\\",             // EXIF version\\n        0xA000 : \\"FlashpixVersion\\",         // Flashpix format version\\n\\n        // colorspace tags\\n        0xA001 : \\"ColorSpace\\",              // Color space information tag\\n\\n        // image configuration\\n        0xA002 : \\"PixelXDimension\\",         // Valid width of meaningful image\\n        0xA003 : \\"PixelYDimension\\",         // Valid height of meaningful image\\n        0x9101 : \\"ComponentsConfiguration\\", // Information about channels\\n        0x9102 : \\"CompressedBitsPerPixel\\",  // Compressed bits per pixel\\n\\n        // user information\\n        0x927C : \\"MakerNote\\",               // Any desired information written by the manufacturer\\n        0x9286 : \\"UserComment\\",             // Comments by user\\n\\n        // related file\\n        0xA004 : \\"RelatedSoundFile\\",        // Name of related sound file\\n\\n        // date and time\\n        0x9003 : \\"DateTimeOriginal\\",        // Date and time when the original image was generated\\n        0x9004 : \\"DateTimeDigitized\\",       // Date and time when the image was stored digitally\\n        0x9290 : \\"SubsecTime\\",              // Fractions of seconds for DateTime\\n        0x9291 : \\"SubsecTimeOriginal\\",      // Fractions of seconds for DateTimeOriginal\\n        0x9292 : \\"SubsecTimeDigitized\\",     // Fractions of seconds for DateTimeDigitized\\n\\n        // picture-taking conditions\\n        0x829A : \\"ExposureTime\\",            // Exposure time (in seconds)\\n        0x829D : \\"FNumber\\",                 // F number\\n        0x8822 : \\"ExposureProgram\\",         // Exposure program\\n        0x8824 : \\"SpectralSensitivity\\",     // Spectral sensitivity\\n        0x8827 : \\"ISOSpeedRatings\\",         // ISO speed rating\\n        0x8828 : \\"OECF\\",                    // Optoelectric conversion factor\\n        0x9201 : \\"ShutterSpeedValue\\",       // Shutter speed\\n        0x9202 : \\"ApertureValue\\",           // Lens aperture\\n        0x9203 : \\"BrightnessValue\\",         // Value of brightness\\n        0x9204 : \\"ExposureBias\\",            // Exposure bias\\n        0x9205 : \\"MaxApertureValue\\",        // Smallest F number of lens\\n        0x9206 : \\"SubjectDistance\\",         // Distance to subject in meters\\n        0x9207 : \\"MeteringMode\\",            // Metering mode\\n        0x9208 : \\"LightSource\\",             // Kind of light source\\n        0x9209 : \\"Flash\\",                   // Flash status\\n        0x9214 : \\"SubjectArea\\",             // Location and area of main subject\\n        0x920A : \\"FocalLength\\",             // Focal length of the lens in mm\\n        0xA20B : \\"FlashEnergy\\",             // Strobe energy in BCPS\\n        0xA20C : \\"SpatialFrequencyResponse\\",    //\\n        0xA20E : \\"FocalPlaneXResolution\\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\\n        0xA20F : \\"FocalPlaneYResolution\\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\\n        0xA210 : \\"FocalPlaneResolutionUnit\\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\\n        0xA214 : \\"SubjectLocation\\",         // Location of subject in image\\n        0xA215 : \\"ExposureIndex\\",           // Exposure index selected on camera\\n        0xA217 : \\"SensingMethod\\",           // Image sensor type\\n        0xA300 : \\"FileSource\\",              // Image source (3 == DSC)\\n        0xA301 : \\"SceneType\\",               // Scene type (1 == directly photographed)\\n        0xA302 : \\"CFAPattern\\",              // Color filter array geometric pattern\\n        0xA401 : \\"CustomRendered\\",          // Special processing\\n        0xA402 : \\"ExposureMode\\",            // Exposure mode\\n        0xA403 : \\"WhiteBalance\\",            // 1 = auto white balance, 2 = manual\\n        0xA404 : \\"DigitalZoomRation\\",       // Digital zoom ratio\\n        0xA405 : \\"FocalLengthIn35mmFilm\\",   // Equivalent foacl length assuming 35mm film camera (in mm)\\n        0xA406 : \\"SceneCaptureType\\",        // Type of scene\\n        0xA407 : \\"GainControl\\",             // Degree of overall image gain adjustment\\n        0xA408 : \\"Contrast\\",                // Direction of contrast processing applied by camera\\n        0xA409 : \\"Saturation\\",              // Direction of saturation processing applied by camera\\n        0xA40A : \\"Sharpness\\",               // Direction of sharpness processing applied by camera\\n        0xA40B : \\"DeviceSettingDescription\\",    //\\n        0xA40C : \\"SubjectDistanceRange\\",    // Distance to subject\\n\\n        // other tags\\n        0xA005 : \\"InteroperabilityIFDPointer\\",\\n        0xA420 : \\"ImageUniqueID\\"            // Identifier assigned uniquely to each image\\n    };\\n\\n    var TiffTags = EXIF.TiffTags = {\\n        0x0100 : \\"ImageWidth\\",\\n        0x0101 : \\"ImageHeight\\",\\n        0x8769 : \\"ExifIFDPointer\\",\\n        0x8825 : \\"GPSInfoIFDPointer\\",\\n        0xA005 : \\"InteroperabilityIFDPointer\\",\\n        0x0102 : \\"BitsPerSample\\",\\n        0x0103 : \\"Compression\\",\\n        0x0106 : \\"PhotometricInterpretation\\",\\n        0x0112 : \\"Orientation\\",\\n        0x0115 : \\"SamplesPerPixel\\",\\n        0x011C : \\"PlanarConfiguration\\",\\n        0x0212 : \\"YCbCrSubSampling\\",\\n        0x0213 : \\"YCbCrPositioning\\",\\n        0x011A : \\"XResolution\\",\\n        0x011B : \\"YResolution\\",\\n        0x0128 : \\"ResolutionUnit\\",\\n        0x0111 : \\"StripOffsets\\",\\n        0x0116 : \\"RowsPerStrip\\",\\n        0x0117 : \\"StripByteCounts\\",\\n        0x0201 : \\"JPEGInterchangeFormat\\",\\n        0x0202 : \\"JPEGInterchangeFormatLength\\",\\n        0x012D : \\"TransferFunction\\",\\n        0x013E : \\"WhitePoint\\",\\n        0x013F : \\"PrimaryChromaticities\\",\\n        0x0211 : \\"YCbCrCoefficients\\",\\n        0x0214 : \\"ReferenceBlackWhite\\",\\n        0x0132 : \\"DateTime\\",\\n        0x010E : \\"ImageDescription\\",\\n        0x010F : \\"Make\\",\\n        0x0110 : \\"Model\\",\\n        0x0131 : \\"Software\\",\\n        0x013B : \\"Artist\\",\\n        0x8298 : \\"Copyright\\"\\n    };\\n\\n    var GPSTags = EXIF.GPSTags = {\\n        0x0000 : \\"GPSVersionID\\",\\n        0x0001 : \\"GPSLatitudeRef\\",\\n        0x0002 : \\"GPSLatitude\\",\\n        0x0003 : \\"GPSLongitudeRef\\",\\n        0x0004 : \\"GPSLongitude\\",\\n        0x0005 : \\"GPSAltitudeRef\\",\\n        0x0006 : \\"GPSAltitude\\",\\n        0x0007 : \\"GPSTimeStamp\\",\\n        0x0008 : \\"GPSSatellites\\",\\n        0x0009 : \\"GPSStatus\\",\\n        0x000A : \\"GPSMeasureMode\\",\\n        0x000B : \\"GPSDOP\\",\\n        0x000C : \\"GPSSpeedRef\\",\\n        0x000D : \\"GPSSpeed\\",\\n        0x000E : \\"GPSTrackRef\\",\\n        0x000F : \\"GPSTrack\\",\\n        0x0010 : \\"GPSImgDirectionRef\\",\\n        0x0011 : \\"GPSImgDirection\\",\\n        0x0012 : \\"GPSMapDatum\\",\\n        0x0013 : \\"GPSDestLatitudeRef\\",\\n        0x0014 : \\"GPSDestLatitude\\",\\n        0x0015 : \\"GPSDestLongitudeRef\\",\\n        0x0016 : \\"GPSDestLongitude\\",\\n        0x0017 : \\"GPSDestBearingRef\\",\\n        0x0018 : \\"GPSDestBearing\\",\\n        0x0019 : \\"GPSDestDistanceRef\\",\\n        0x001A : \\"GPSDestDistance\\",\\n        0x001B : \\"GPSProcessingMethod\\",\\n        0x001C : \\"GPSAreaInformation\\",\\n        0x001D : \\"GPSDateStamp\\",\\n        0x001E : \\"GPSDifferential\\"\\n    };\\n\\n     // EXIF 2.3 Spec\\n    var IFD1Tags = EXIF.IFD1Tags = {\\n        0x0100: \\"ImageWidth\\",\\n        0x0101: \\"ImageHeight\\",\\n        0x0102: \\"BitsPerSample\\",\\n        0x0103: \\"Compression\\",\\n        0x0106: \\"PhotometricInterpretation\\",\\n        0x0111: \\"StripOffsets\\",\\n        0x0112: \\"Orientation\\",\\n        0x0115: \\"SamplesPerPixel\\",\\n        0x0116: \\"RowsPerStrip\\",\\n        0x0117: \\"StripByteCounts\\",\\n        0x011A: \\"XResolution\\",\\n        0x011B: \\"YResolution\\",\\n        0x011C: \\"PlanarConfiguration\\",\\n        0x0128: \\"ResolutionUnit\\",\\n        0x0201: \\"JpegIFOffset\\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \\"ThumbnailOffset\\" or \\"JPEGInterchangeFormat\\")\\n        0x0202: \\"JpegIFByteCount\\", // When image format is JPEG, this value shows data size of JPEG image (aka \\"ThumbnailLength\\" or \\"JPEGInterchangeFormatLength\\")\\n        0x0211: \\"YCbCrCoefficients\\",\\n        0x0212: \\"YCbCrSubSampling\\",\\n        0x0213: \\"YCbCrPositioning\\",\\n        0x0214: \\"ReferenceBlackWhite\\"\\n    };\\n\\n    var StringValues = EXIF.StringValues = {\\n        ExposureProgram : {\\n            0 : \\"Not defined\\",\\n            1 : \\"Manual\\",\\n            2 : \\"Normal program\\",\\n            3 : \\"Aperture priority\\",\\n            4 : \\"Shutter priority\\",\\n            5 : \\"Creative program\\",\\n            6 : \\"Action program\\",\\n            7 : \\"Portrait mode\\",\\n            8 : \\"Landscape mode\\"\\n        },\\n        MeteringMode : {\\n            0 : \\"Unknown\\",\\n            1 : \\"Average\\",\\n            2 : \\"CenterWeightedAverage\\",\\n            3 : \\"Spot\\",\\n            4 : \\"MultiSpot\\",\\n            5 : \\"Pattern\\",\\n            6 : \\"Partial\\",\\n            255 : \\"Other\\"\\n        },\\n        LightSource : {\\n            0 : \\"Unknown\\",\\n            1 : \\"Daylight\\",\\n            2 : \\"Fluorescent\\",\\n            3 : \\"Tungsten (incandescent light)\\",\\n            4 : \\"Flash\\",\\n            9 : \\"Fine weather\\",\\n            10 : \\"Cloudy weather\\",\\n            11 : \\"Shade\\",\\n            12 : \\"Daylight fluorescent (D 5700 - 7100K)\\",\\n            13 : \\"Day white fluorescent (N 4600 - 5400K)\\",\\n            14 : \\"Cool white fluorescent (W 3900 - 4500K)\\",\\n            15 : \\"White fluorescent (WW 3200 - 3700K)\\",\\n            17 : \\"Standard light A\\",\\n            18 : \\"Standard light B\\",\\n            19 : \\"Standard light C\\",\\n            20 : \\"D55\\",\\n            21 : \\"D65\\",\\n            22 : \\"D75\\",\\n            23 : \\"D50\\",\\n            24 : \\"ISO studio tungsten\\",\\n            255 : \\"Other\\"\\n        },\\n        Flash : {\\n            0x0000 : \\"Flash did not fire\\",\\n            0x0001 : \\"Flash fired\\",\\n            0x0005 : \\"Strobe return light not detected\\",\\n            0x0007 : \\"Strobe return light detected\\",\\n            0x0009 : \\"Flash fired, compulsory flash mode\\",\\n            0x000D : \\"Flash fired, compulsory flash mode, return light not detected\\",\\n            0x000F : \\"Flash fired, compulsory flash mode, return light detected\\",\\n            0x0010 : \\"Flash did not fire, compulsory flash mode\\",\\n            0x0018 : \\"Flash did not fire, auto mode\\",\\n            0x0019 : \\"Flash fired, auto mode\\",\\n            0x001D : \\"Flash fired, auto mode, return light not detected\\",\\n            0x001F : \\"Flash fired, auto mode, return light detected\\",\\n            0x0020 : \\"No flash function\\",\\n            0x0041 : \\"Flash fired, red-eye reduction mode\\",\\n            0x0045 : \\"Flash fired, red-eye reduction mode, return light not detected\\",\\n            0x0047 : \\"Flash fired, red-eye reduction mode, return light detected\\",\\n            0x0049 : \\"Flash fired, compulsory flash mode, red-eye reduction mode\\",\\n            0x004D : \\"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\\",\\n            0x004F : \\"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\\",\\n            0x0059 : \\"Flash fired, auto mode, red-eye reduction mode\\",\\n            0x005D : \\"Flash fired, auto mode, return light not detected, red-eye reduction mode\\",\\n            0x005F : \\"Flash fired, auto mode, return light detected, red-eye reduction mode\\"\\n        },\\n        SensingMethod : {\\n            1 : \\"Not defined\\",\\n            2 : \\"One-chip color area sensor\\",\\n            3 : \\"Two-chip color area sensor\\",\\n            4 : \\"Three-chip color area sensor\\",\\n            5 : \\"Color sequential area sensor\\",\\n            7 : \\"Trilinear sensor\\",\\n            8 : \\"Color sequential linear sensor\\"\\n        },\\n        SceneCaptureType : {\\n            0 : \\"Standard\\",\\n            1 : \\"Landscape\\",\\n            2 : \\"Portrait\\",\\n            3 : \\"Night scene\\"\\n        },\\n        SceneType : {\\n            1 : \\"Directly photographed\\"\\n        },\\n        CustomRendered : {\\n            0 : \\"Normal process\\",\\n            1 : \\"Custom process\\"\\n        },\\n        WhiteBalance : {\\n            0 : \\"Auto white balance\\",\\n            1 : \\"Manual white balance\\"\\n        },\\n        GainControl : {\\n            0 : \\"None\\",\\n            1 : \\"Low gain up\\",\\n            2 : \\"High gain up\\",\\n            3 : \\"Low gain down\\",\\n            4 : \\"High gain down\\"\\n        },\\n        Contrast : {\\n            0 : \\"Normal\\",\\n            1 : \\"Soft\\",\\n            2 : \\"Hard\\"\\n        },\\n        Saturation : {\\n            0 : \\"Normal\\",\\n            1 : \\"Low saturation\\",\\n            2 : \\"High saturation\\"\\n        },\\n        Sharpness : {\\n            0 : \\"Normal\\",\\n            1 : \\"Soft\\",\\n            2 : \\"Hard\\"\\n        },\\n        SubjectDistanceRange : {\\n            0 : \\"Unknown\\",\\n            1 : \\"Macro\\",\\n            2 : \\"Close view\\",\\n            3 : \\"Distant view\\"\\n        },\\n        FileSource : {\\n            3 : \\"DSC\\"\\n        },\\n\\n        Components : {\\n            0 : \\"\\",\\n            1 : \\"Y\\",\\n            2 : \\"Cb\\",\\n            3 : \\"Cr\\",\\n            4 : \\"R\\",\\n            5 : \\"G\\",\\n            6 : \\"B\\"\\n        }\\n    };\\n\\n    function addEvent(element, event, handler) {\\n        if (element.addEventListener) {\\n            element.addEventListener(event, handler, false);\\n        } else if (element.attachEvent) {\\n            element.attachEvent(\\"on\\" + event, handler);\\n        }\\n    }\\n\\n    function imageHasData(img) {\\n        return !!(img.exifdata);\\n    }\\n\\n\\n    function base64ToArrayBuffer(base64, contentType) {\\n        contentType = contentType || base64.match(/^data\\\\:([^\\\\;]+)\\\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\\n        base64 = base64.replace(/^data\\\\:([^\\\\;]+)\\\\;base64,/gmi, '');\\n        var binary = atob(base64);\\n        var len = binary.length;\\n        var buffer = new ArrayBuffer(len);\\n        var view = new Uint8Array(buffer);\\n        for (var i = 0; i < len; i++) {\\n            view[i] = binary.charCodeAt(i);\\n        }\\n        return buffer;\\n    }\\n\\n    function objectURLToBlob(url, callback) {\\n        var http = new XMLHttpRequest();\\n        http.open(\\"GET\\", url, true);\\n        http.responseType = \\"blob\\";\\n        http.onload = function(e) {\\n            if (this.status == 200 || this.status === 0) {\\n                callback(this.response);\\n            }\\n        };\\n        http.send();\\n    }\\n\\n    function getImageData(img, callback) {\\n        function handleBinaryFile(binFile) {\\n            var data = findEXIFinJPEG(binFile);\\n            img.exifdata = data || {};\\n            var iptcdata = findIPTCinJPEG(binFile);\\n            img.iptcdata = iptcdata || {};\\n            if (EXIF.isXmpEnabled) {\\n               var xmpdata= findXMPinJPEG(binFile);\\n               img.xmpdata = xmpdata || {};               \\n            }\\n            if (callback) {\\n                callback.call(img);\\n            }\\n        }\\n\\n        if (img.src) {\\n            if (/^data\\\\:/i.test(img.src)) { // Data URI\\n                var arrayBuffer = base64ToArrayBuffer(img.src);\\n                handleBinaryFile(arrayBuffer);\\n\\n            } else if (/^blob\\\\:/i.test(img.src)) { // Object URL\\n                var fileReader = new FileReader();\\n                fileReader.onload = function(e) {\\n                    handleBinaryFile(e.target.result);\\n                };\\n                objectURLToBlob(img.src, function (blob) {\\n                    fileReader.readAsArrayBuffer(blob);\\n                });\\n            } else {\\n                var http = new XMLHttpRequest();\\n                http.onload = function() {\\n                    if (this.status == 200 || this.status === 0) {\\n                        handleBinaryFile(http.response);\\n                    } else {\\n                        throw \\"Could not load image\\";\\n                    }\\n                    http = null;\\n                };\\n                http.open(\\"GET\\", img.src, true);\\n                http.responseType = \\"arraybuffer\\";\\n                http.send(null);\\n            }\\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\\n            var fileReader = new FileReader();\\n            fileReader.onload = function(e) {\\n                if (debug) console.log(\\"Got file of length \\" + e.target.result.byteLength);\\n                handleBinaryFile(e.target.result);\\n            };\\n\\n            fileReader.readAsArrayBuffer(img);\\n        }\\n    }\\n\\n    function findEXIFinJPEG(file) {\\n        var dataView = new DataView(file);\\n\\n        if (debug) console.log(\\"Got file of length \\" + file.byteLength);\\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\\n            if (debug) console.log(\\"Not a valid JPEG\\");\\n            return false; // not a valid jpeg\\n        }\\n\\n        var offset = 2,\\n            length = file.byteLength,\\n            marker;\\n\\n        while (offset < length) {\\n            if (dataView.getUint8(offset) != 0xFF) {\\n                if (debug) console.log(\\"Not a valid marker at offset \\" + offset + \\", found: \\" + dataView.getUint8(offset));\\n                return false; // not a valid marker, something is wrong\\n            }\\n\\n            marker = dataView.getUint8(offset + 1);\\n            if (debug) console.log(marker);\\n\\n            // we could implement handling for other markers here,\\n            // but we're only looking for 0xFFE1 for EXIF data\\n\\n            if (marker == 225) {\\n                if (debug) console.log(\\"Found 0xFFE1 marker\\");\\n\\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\\n\\n                // offset += 2 + file.getShortAt(offset+2, true);\\n\\n            } else {\\n                offset += 2 + dataView.getUint16(offset+2);\\n            }\\n\\n        }\\n\\n    }\\n\\n    function findIPTCinJPEG(file) {\\n        var dataView = new DataView(file);\\n\\n        if (debug) console.log(\\"Got file of length \\" + file.byteLength);\\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\\n            if (debug) console.log(\\"Not a valid JPEG\\");\\n            return false; // not a valid jpeg\\n        }\\n\\n        var offset = 2,\\n            length = file.byteLength;\\n\\n\\n        var isFieldSegmentStart = function(dataView, offset){\\n            return (\\n                dataView.getUint8(offset) === 0x38 &&\\n                dataView.getUint8(offset+1) === 0x42 &&\\n                dataView.getUint8(offset+2) === 0x49 &&\\n                dataView.getUint8(offset+3) === 0x4D &&\\n                dataView.getUint8(offset+4) === 0x04 &&\\n                dataView.getUint8(offset+5) === 0x04\\n            );\\n        };\\n\\n        while (offset < length) {\\n\\n            if ( isFieldSegmentStart(dataView, offset )){\\n\\n                // Get the length of the name header (which is padded to an even number of bytes)\\n                var nameHeaderLength = dataView.getUint8(offset+7);\\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\\n                // Check for pre photoshop 6 format\\n                if(nameHeaderLength === 0) {\\n                    // Always 4\\n                    nameHeaderLength = 4;\\n                }\\n\\n                var startOffset = offset + 8 + nameHeaderLength;\\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\\n\\n                return readIPTCData(file, startOffset, sectionLength);\\n\\n                break;\\n\\n            }\\n\\n\\n            // Not the marker, continue searching\\n            offset++;\\n\\n        }\\n\\n    }\\n    var IptcFieldMap = {\\n        0x78 : 'caption',\\n        0x6E : 'credit',\\n        0x19 : 'keywords',\\n        0x37 : 'dateCreated',\\n        0x50 : 'byline',\\n        0x55 : 'bylineTitle',\\n        0x7A : 'captionWriter',\\n        0x69 : 'headline',\\n        0x74 : 'copyright',\\n        0x0F : 'category'\\n    };\\n    function readIPTCData(file, startOffset, sectionLength){\\n        var dataView = new DataView(file);\\n        var data = {};\\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\\n        var segmentStartPos = startOffset;\\n        while(segmentStartPos < startOffset+sectionLength) {\\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\\n                segmentType = dataView.getUint8(segmentStartPos+2);\\n                if(segmentType in IptcFieldMap) {\\n                    dataSize = dataView.getInt16(segmentStartPos+3);\\n                    segmentSize = dataSize + 5;\\n                    fieldName = IptcFieldMap[segmentType];\\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\\n                    // Check if we already stored a value with this name\\n                    if(data.hasOwnProperty(fieldName)) {\\n                        // Value already stored with this name, create multivalue field\\n                        if(data[fieldName] instanceof Array) {\\n                            data[fieldName].push(fieldValue);\\n                        }\\n                        else {\\n                            data[fieldName] = [data[fieldName], fieldValue];\\n                        }\\n                    }\\n                    else {\\n                        data[fieldName] = fieldValue;\\n                    }\\n                }\\n\\n            }\\n            segmentStartPos++;\\n        }\\n        return data;\\n    }\\n\\n\\n\\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\\n        var entries = file.getUint16(dirStart, !bigEnd),\\n            tags = {},\\n            entryOffset, tag,\\n            i;\\n\\n        for (i=0;i<entries;i++) {\\n            entryOffset = dirStart + i*12 + 2;\\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\\n            if (!tag && debug) console.log(\\"Unknown tag: \\" + file.getUint16(entryOffset, !bigEnd));\\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\\n        }\\n        return tags;\\n    }\\n\\n\\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\\n        var type = file.getUint16(entryOffset+2, !bigEnd),\\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\\n            offset,\\n            vals, val, n,\\n            numerator, denominator;\\n\\n        switch (type) {\\n            case 1: // byte, 8-bit unsigned int\\n            case 7: // undefined, 8-bit byte, value depending on field\\n                if (numValues == 1) {\\n                    return file.getUint8(entryOffset + 8, !bigEnd);\\n                } else {\\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getUint8(offset + n);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 2: // ascii, 8-bit byte\\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\\n                return getStringFromDB(file, offset, numValues-1);\\n\\n            case 3: // short, 16 bit int\\n                if (numValues == 1) {\\n                    return file.getUint16(entryOffset + 8, !bigEnd);\\n                } else {\\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 4: // long, 32 bit int\\n                if (numValues == 1) {\\n                    return file.getUint32(entryOffset + 8, !bigEnd);\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 5:    // rational = two long values, first is numerator, second is denominator\\n                if (numValues == 1) {\\n                    numerator = file.getUint32(valueOffset, !bigEnd);\\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\\n                    val = new Number(numerator / denominator);\\n                    val.numerator = numerator;\\n                    val.denominator = denominator;\\n                    return val;\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\\n                        vals[n] = new Number(numerator / denominator);\\n                        vals[n].numerator = numerator;\\n                        vals[n].denominator = denominator;\\n                    }\\n                    return vals;\\n                }\\n\\n            case 9: // slong, 32 bit signed int\\n                if (numValues == 1) {\\n                    return file.getInt32(entryOffset + 8, !bigEnd);\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n\\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\\n                if (numValues == 1) {\\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\\n                } else {\\n                    vals = [];\\n                    for (n=0;n<numValues;n++) {\\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\\n                    }\\n                    return vals;\\n                }\\n        }\\n    }\\n\\n    /**\\n    * Given an IFD (Image File Directory) start offset\\n    * returns an offset to next IFD or 0 if it's the last IFD.\\n    */\\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\\n        //the first 2bytes means the number of directory entries contains in this IFD\\n        var entries = dataView.getUint16(dirStart, !bigEnd);\\n\\n        // After last directory entry, there is a 4bytes of data,\\n        // it means an offset to next IFD.\\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\\n\\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\\n    }\\n\\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\\n        // get the IFD1 offset\\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\\n\\n        if (!IFD1OffsetPointer) {\\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\\n            return {};\\n        }\\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\\n            return {};\\n        }\\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\\n\\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\\n\\n        // EXIF 2.3 specification for JPEG format thumbnail\\n\\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\\n\\n        if (thumbTags['Compression']) {\\n            // console.log('Thumbnail image found!');\\n\\n            switch (thumbTags['Compression']) {\\n                case 6:\\n                    // console.log('Thumbnail image format is JPEG');\\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\\n                    // extract the thumbnail\\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\\n                        var tLength = thumbTags.JpegIFByteCount;\\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\\n                            type: 'image/jpeg'\\n                        });\\n                    }\\n                break;\\n\\n            case 1:\\n                console.log(\\"Thumbnail image format is TIFF, which is not implemented.\\");\\n                break;\\n            default:\\n                console.log(\\"Unknown thumbnail image format '%s'\\", thumbTags['Compression']);\\n            }\\n        }\\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\\n            console.log(\\"Thumbnail image format is RGB, which is not implemented.\\");\\n        }\\n        return thumbTags;\\n    }\\n\\n    function getStringFromDB(buffer, start, length) {\\n        var outstr = \\"\\";\\n        for (n = start; n < start+length; n++) {\\n            outstr += String.fromCharCode(buffer.getUint8(n));\\n        }\\n        return outstr;\\n    }\\n\\n    function readEXIFData(file, start) {\\n        if (getStringFromDB(file, start, 4) != \\"Exif\\") {\\n            if (debug) console.log(\\"Not valid EXIF data! \\" + getStringFromDB(file, start, 4));\\n            return false;\\n        }\\n\\n        var bigEnd,\\n            tags, tag,\\n            exifData, gpsData,\\n            tiffOffset = start + 6;\\n\\n        // test for TIFF validity and endianness\\n        if (file.getUint16(tiffOffset) == 0x4949) {\\n            bigEnd = false;\\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\\n            bigEnd = true;\\n        } else {\\n            if (debug) console.log(\\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\\");\\n            return false;\\n        }\\n\\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\\n            if (debug) console.log(\\"Not valid TIFF data! (no 0x002A)\\");\\n            return false;\\n        }\\n\\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\\n\\n        if (firstIFDOffset < 0x00000008) {\\n            if (debug) console.log(\\"Not valid TIFF data! (First offset less than 8)\\", file.getUint32(tiffOffset+4, !bigEnd));\\n            return false;\\n        }\\n\\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\\n\\n        if (tags.ExifIFDPointer) {\\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\\n            for (tag in exifData) {\\n                switch (tag) {\\n                    case \\"LightSource\\" :\\n                    case \\"Flash\\" :\\n                    case \\"MeteringMode\\" :\\n                    case \\"ExposureProgram\\" :\\n                    case \\"SensingMethod\\" :\\n                    case \\"SceneCaptureType\\" :\\n                    case \\"SceneType\\" :\\n                    case \\"CustomRendered\\" :\\n                    case \\"WhiteBalance\\" :\\n                    case \\"GainControl\\" :\\n                    case \\"Contrast\\" :\\n                    case \\"Saturation\\" :\\n                    case \\"Sharpness\\" :\\n                    case \\"SubjectDistanceRange\\" :\\n                    case \\"FileSource\\" :\\n                        exifData[tag] = StringValues[tag][exifData[tag]];\\n                        break;\\n\\n                    case \\"ExifVersion\\" :\\n                    case \\"FlashpixVersion\\" :\\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\\n                        break;\\n\\n                    case \\"ComponentsConfiguration\\" :\\n                        exifData[tag] =\\n                            StringValues.Components[exifData[tag][0]] +\\n                            StringValues.Components[exifData[tag][1]] +\\n                            StringValues.Components[exifData[tag][2]] +\\n                            StringValues.Components[exifData[tag][3]];\\n                        break;\\n                }\\n                tags[tag] = exifData[tag];\\n            }\\n        }\\n\\n        if (tags.GPSInfoIFDPointer) {\\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\\n            for (tag in gpsData) {\\n                switch (tag) {\\n                    case \\"GPSVersionID\\" :\\n                        gpsData[tag] = gpsData[tag][0] +\\n                            \\".\\" + gpsData[tag][1] +\\n                            \\".\\" + gpsData[tag][2] +\\n                            \\".\\" + gpsData[tag][3];\\n                        break;\\n                }\\n                tags[tag] = gpsData[tag];\\n            }\\n        }\\n\\n        // extract thumbnail\\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\\n\\n        return tags;\\n    }\\n\\n   function findXMPinJPEG(file) {\\n\\n        if (!('DOMParser' in self)) {\\n            // console.warn('XML parsing not supported without DOMParser');\\n            return;\\n        }\\n        var dataView = new DataView(file);\\n\\n        if (debug) console.log(\\"Got file of length \\" + file.byteLength);\\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\\n           if (debug) console.log(\\"Not a valid JPEG\\");\\n           return false; // not a valid jpeg\\n        }\\n\\n        var offset = 2,\\n            length = file.byteLength,\\n            dom = new DOMParser();\\n\\n        while (offset < (length-4)) {\\n            if (getStringFromDB(dataView, offset, 4) == \\"http\\") {\\n                var startOffset = offset - 1;\\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\\n\\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\\n                //Without these namespaces, XML is thought to be invalid by parsers\\n                xmpString = xmpString.slice(0, indexOfXmp)\\n                            + 'xmlns:Iptc4xmpCore=\\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\\" '\\n                            + 'xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" '\\n                            + 'xmlns:tiff=\\"http://ns.adobe.com/tiff/1.0/\\" '\\n                            + 'xmlns:plus=\\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\\" '\\n                            + 'xmlns:ext=\\"http://www.gettyimages.com/xsltExtension/1.0\\" '\\n                            + 'xmlns:exif=\\"http://ns.adobe.com/exif/1.0/\\" '\\n                            + 'xmlns:stEvt=\\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\\" '\\n                            + 'xmlns:stRef=\\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\\" '\\n                            + 'xmlns:crs=\\"http://ns.adobe.com/camera-raw-settings/1.0/\\" '\\n                            + 'xmlns:xapGImg=\\"http://ns.adobe.com/xap/1.0/g/img/\\" '\\n                            + 'xmlns:Iptc4xmpExt=\\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\\" '\\n                            + xmpString.slice(indexOfXmp)\\n\\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\\n                return xml2Object(domDocument);\\n            } else{\\n             offset++;\\n            }\\n        }\\n    }\\n\\n    function xml2json(xml) {\\n        var json = {};\\n      \\n        if (xml.nodeType == 1) { // element node\\n          if (xml.attributes.length > 0) {\\n            json['@attributes'] = {};\\n            for (var j = 0; j < xml.attributes.length; j++) {\\n              var attribute = xml.attributes.item(j);\\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\\n            }\\n          }\\n        } else if (xml.nodeType == 3) { // text node\\n          return xml.nodeValue;\\n        }\\n      \\n        // deal with children\\n        if (xml.hasChildNodes()) {\\n          for(var i = 0; i < xml.childNodes.length; i++) {\\n            var child = xml.childNodes.item(i);\\n            var nodeName = child.nodeName;\\n            if (json[nodeName] == null) {\\n              json[nodeName] = xml2json(child);\\n            } else {\\n              if (json[nodeName].push == null) {\\n                var old = json[nodeName];\\n                json[nodeName] = [];\\n                json[nodeName].push(old);\\n              }\\n              json[nodeName].push(xml2json(child));\\n            }\\n          }\\n        }\\n        \\n        return json;\\n    }\\n\\n    function xml2Object(xml) {\\n        try {\\n            var obj = {};\\n            if (xml.children.length > 0) {\\n              for (var i = 0; i < xml.children.length; i++) {\\n                var item = xml.children.item(i);\\n                var attributes = item.attributes;\\n                for(var idx in attributes) {\\n                    var itemAtt = attributes[idx];\\n                    var dataKey = itemAtt.nodeName;\\n                    var dataValue = itemAtt.nodeValue;\\n\\n                    if(dataKey !== undefined) {\\n                        obj[dataKey] = dataValue;\\n                    }\\n                }\\n                var nodeName = item.nodeName;\\n\\n                if (typeof (obj[nodeName]) == \\"undefined\\") {\\n                  obj[nodeName] = xml2json(item);\\n                } else {\\n                  if (typeof (obj[nodeName].push) == \\"undefined\\") {\\n                    var old = obj[nodeName];\\n\\n                    obj[nodeName] = [];\\n                    obj[nodeName].push(old);\\n                  }\\n                  obj[nodeName].push(xml2json(item));\\n                }\\n              }\\n            } else {\\n              obj = xml.textContent;\\n            }\\n            return obj;\\n          } catch (e) {\\n              console.log(e.message);\\n          }\\n    }\\n\\n    EXIF.enableXmp = function() {\\n        EXIF.isXmpEnabled = true;\\n    }\\n\\n    EXIF.disableXmp = function() {\\n        EXIF.isXmpEnabled = false;\\n    }\\n\\n    EXIF.getData = function(img, callback) {\\n        if (((self.Image && img instanceof self.Image)\\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\\n            && !img.complete)\\n            return false;\\n\\n        if (!imageHasData(img)) {\\n            getImageData(img, callback);\\n        } else {\\n            if (callback) {\\n                callback.call(img);\\n            }\\n        }\\n        return true;\\n    }\\n\\n    EXIF.getTag = function(img, tag) {\\n        if (!imageHasData(img)) return;\\n        return img.exifdata[tag];\\n    }\\n    \\n    EXIF.getIptcTag = function(img, tag) {\\n        if (!imageHasData(img)) return;\\n        return img.iptcdata[tag];\\n    }\\n\\n    EXIF.getAllTags = function(img) {\\n        if (!imageHasData(img)) return {};\\n        var a,\\n            data = img.exifdata,\\n            tags = {};\\n        for (a in data) {\\n            if (data.hasOwnProperty(a)) {\\n                tags[a] = data[a];\\n            }\\n        }\\n        return tags;\\n    }\\n    \\n    EXIF.getAllIptcTags = function(img) {\\n        if (!imageHasData(img)) return {};\\n        var a,\\n            data = img.iptcdata,\\n            tags = {};\\n        for (a in data) {\\n            if (data.hasOwnProperty(a)) {\\n                tags[a] = data[a];\\n            }\\n        }\\n        return tags;\\n    }\\n\\n    EXIF.pretty = function(img) {\\n        if (!imageHasData(img)) return \\"\\";\\n        var a,\\n            data = img.exifdata,\\n            strPretty = \\"\\";\\n        for (a in data) {\\n            if (data.hasOwnProperty(a)) {\\n                if (typeof data[a] == \\"object\\") {\\n                    if (data[a] instanceof Number) {\\n                        strPretty += a + \\" : \\" + data[a] + \\" [\\" + data[a].numerator + \\"/\\" + data[a].denominator + \\"]\\\\r\\\\n\\";\\n                    } else {\\n                        strPretty += a + \\" : [\\" + data[a].length + \\" values]\\\\r\\\\n\\";\\n                    }\\n                } else {\\n                    strPretty += a + \\" : \\" + data[a] + \\"\\\\r\\\\n\\";\\n                }\\n            }\\n        }\\n        return strPretty;\\n    }\\n\\n    EXIF.readFromBinaryFile = function(file) {\\n        return findEXIFinJPEG(file);\\n    }\\n\\n    if (typeof define === 'function' && define.amd) {\\n        define('exif-js', [], function() {\\n            return EXIF;\\n        });\\n    }\\n}.call(this));\\n\\n\`\`\`\\n\\n\\n以上，拍照上传照片就是正常的角度了。rotate-photo.js、exif.js两个文件引入就可以直接用了，可以根据自身的业务需要修改里头的逻辑。",
    "tagIds": "11,10,31",
    "author": "菜头",
    "authorAvatar": "http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif",
    "weight": 1,
    "type": 1,
    "groupTimestamp": "1560521536520",
    "cover": "https://img.tukuppt.com/png_preview/00/58/11/ijwVSqiJ16.jpg",
    "categoryId": 1,
    "created_at": "2023-11-06T14:14:13.000Z",
    "updated_at": "2023-11-08T05:36:56.000Z",
    "tagList": [
        {
            "id": 10,
            "name": "HTML"
        },
        {
            "id": 11,
            "name": "JavaScript"
        },
        {
            "id": 31,
            "name": "JQuery"
        }
    ],
    "createDate": "2019-06-14"
}`,M=`{
    "id": 5,
    "title": "Nuxt.js小试牛刀—用SSR框架Nuxt.js+koa开发官网件",
    "subTitle": "浅浅写个公司官网",
    "link": null,
    "description": "前段时间需要开发HybridAPP中的H5部分，在编写H5的过程中遇到了让我印象深刻的首屏加载白屏的问题。白屏问题受网络影响，众所周知Vue是SPA框架，就是单页面应用，简单来说就是可以把整个项目看成是一个页面，在首屏加载的时候，是加载的整个项目。在项目比较大的时候，网络越差，需要拉取单页面应用的时间就会长，在等待的过程中就会产生白屏。在寻找解决思路的过程中了解到，要想很好解决这个问题，将项目采用SSR方式（即服务端渲染）来开发是个很不错的选择，由此便接触到了基于Vue的SSR框架NuxtJs。在重构官网时，我便用上了NuxtJs。",
    "content": "## 一、什么是Nuxt.js\\n\\n### 1、简单介绍\\n\\n简单说就是Vue的SEO化。Vue开发的SPA（单页应用）不利于搜索引擎的SEO优化，所以在开发需要搜索引擎提供流量的项目时就比较尴尬，对于公司官网、新闻、博客、电影、咨询等项目来说，Nuxt.js不仅可以带来巨大的 SEO 提升，而且可以做到服务端拼接好html后直接返回，首屏可以做到无需发起ajax、axios请求。\\n\\n### 2、运行原理\\n\\n1. 用户打开浏览器，输入网址请求到Node.js\\n\\n2. 部署在Node.js的应用Nuxt.js接收浏览器请求，并请求服务端获取数据\\n\\n3. Nuxt.js获取到数据后进行服务端渲染\\n\\n4. Nuxt.js将html网页响应给浏览器\\n\\n![image](https://img-blog.csdnimg.cn/img_convert/9c5dfe1608bdd74b2cdd0f8ce8d5a044.png)\\n\\n### 3、流程图\\n\\n下图阐述了 Nuxt.js 应用一个完整的服务器请求到渲染（或用户通过 <nuxt-link> 切换路由渲染页面）的流程：\\n\\n![image](https://img-blog.csdnimg.cn/img_convert/bbe8ab6c4b868a00b12cd6aa6c9d4a28.png)\\n\\n## 二、Nuxt.js实战\\n\\n### 1、创建项目\\n\\n直接使用脚手架工具 create-nuxt-app进行安装：\\n\\n\`\`\`bash\\nnpx create-nuxt-app <项目名>\\n\`\`\`\\n\\n集成服务器端选择koa，UI框架选择ElementUI\\n\\n### 2、项目目录结构\\n\\n项目创建成功之后，生成统一目录结构：\\n\\n\`\`\`\\n.\\n├── assets # 资源目录，存放图片、封装工具等\\n├── components # 组件目录，全局定义的组件\\n├── layouts # 布局目录，用于组织应用的布局组件\\n├── middleware # 中间件目录，目录用于存放应用的中间件\\n├── pages # 页面目录，用于组织应用的路由及视图\\n├── plugins # 插件目录，用于组织那些需要在实例化之前需要运行的JS插件。\\n├── server # 服务端目录，定义集成的服务器端文件\\n├── static # 静态资源目录，存放应用的静态文件\\n├── store # 仓库目录，用于组织应用的 Vuex 状态树文件\\n├── styles # 样式目录，存放页面样式文件\\n├── .eslintrc.js # eslint配置文件\\n├── .gitignore.js # git 忽略文件配置\\n├── nuxt.config.js # 应用的配置文件\\n├── package-lock.json # 版本快照，跑npm install自动生成\\n├── package.json # 用于描述应用的依赖关系和对外暴露的脚本接口\\n├── README.md\\n\`\`\`\\n\\n### 3、项目配置\\n\\n项目配置文件是nuxt.config.js，在项目初始化之后，文件中会有一些默认的基础配置，当你的项目需要实现一些定制化功能时，就需要重新进行配置。\\n\\n#### 3-1 配置网页信息。\\n\\n以往配置网页的一些标题啊，图标什么的都是直接修改根文件index.html，但在这里不一样，因为项目中没有暴露出根文件以供修改，所以需要在配置文件中进行配置。比如说官网的一些配置如下：\\n\\n\`\`\`javascript\\nmodule.exports = {\\n  // ...前面的代码\\n  head: {\\n    title: '小马立行科技',\\n    meta: [\\n      { charset: 'utf-8' },\\n      { name: 'renderer', content: 'webkit' },\\n      { name: 'force-rendering', content: 'webkit' },\\n      { 'http-equiv': 'X-UA-Compatible', content: 'IE=Edge,chrome=1' },\\n      { name: 'keyword', content: '小马立行，汽车互联网科技企业，车联网，大数据' },\\n      { hid: 'description', name: 'description', content: '小马立行-让用户真正的享受到车联网的便利' }\\n    ],\\n    link: [\\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\\n    ],\\n    script: []\\n  }\\n  // ...后面的代码\\n}\\n\`\`\`\\n\\n#### 3-2 引入样式文件\\n\\n如果是直接引入css文件，在css属性中写入相应文件路径。\\n\\n如果需要在项目中使用预处理css语言文件，比如scss文件，则需要先导入一些第三方依赖包：\\n\\n\`\`\`bash\\ncnpm install --save node-sass sass-loader @nuxtjs/style-resources\\n\`\`\`\\n\\n然后添加style-resource模块，并定义全局的样式变量定义文件variables.scss，如下所示\\n\\n\`\`\`javascript\\nmodule.exports = {\\n  // ...前面的代码\\n   loading: { color: '#fff' }, // 配置页面加载的颜色\\n   css: [\\n    'element-ui/lib/theme-chalk/index.css' // 直接引入css文件\\n   ]\\n\\n   styleResources: {\\n    scss: './styles/variables.scss' // 定义全局的样式变量定义文件\\n   },\\n   \\n   /*\\n   ** Plugins to load before mounting the App\\n   ** 该配置项用于配置那些需要在 根vue.js应用 实例化之前需要运行的 Javascript 插件。\\n   */\\n   plugins: [\\n    '@/plugins/element-ui'\\n   ],\\n   \\n   /*\\n   ** Nuxt.js modules 该配置项允许您将Nuxt模块添加到项目中。\\n   */\\n   modules: [\\n    '@nuxtjs/style-resources' // 添加style-resource模块\\n   ],\\n  // ...后面的代码\\n}\\n\`\`\`\\n\\n配置完这些之后，便能在项目中使用sass来编写样式。\\n\\n#### 3-3 引入 Javascript 插件\\n\\nJavascript 插件的引入，可以采取两种方案。\\n\\n一是通过在项目配置中的plugins熟悉，来引入相应的JS文件：\\n\\n![image](https://img-blog.csdnimg.cn/img_convert/2a9e81b80ffb8a08bdf389bd0beca6c8.jpeg)\\n\\n\`\`\`javascript\\n/**\\n* plugins/element-ui.js\\n*/\\nimport Vue from 'vue'\\nimport locale from 'element-ui/lib/locale/lang/en'\\nimport {\\n  Carousel,\\n  CarouselItem,\\n  Drawer\\n} from 'element-ui'\\n\\nVue.use(Carousel, { locale })\\nVue.use(CarouselItem, { locale })\\nVue.use(Drawer, { locale })\\n\`\`\`\\n\\n\\n二是直接在head属性中直接引入。\\n\\n![image](https://img-blog.csdnimg.cn/img_convert/ad4b38470af53109c113e0f5841eb65f.jpeg)\\n\\n两种方式的差别在于，引入顺序的不同。方法一会在页面渲染后引入，而方法二是在页面渲染时引入。对于一些需要在项目渲染完成前就加载的JS文件，需要采用第二种方式进行引入。例如引入用来解决H5页面终端适配的flexible.js时，就需要采用第二种方式引入，用方法一引入时，在页面渲染完成之前会有一段时间处于布局混乱阶段。\\n\\n#### 3-4 响应式配置\\n\\n为了让页面在不同分辨率下能够保持良好的布局，需要引入px2rem和flexible来对项目进行改造，在vue项目中引入这两个插件十分简单，添加相应依赖即可，但在nuxt中稍有不同。\\n\\n导入一些第三方依赖包：\\n\\n\`\`\`bash\\ncnpm install --save postcss-plugin-px2rem px2rem-loader\\n\`\`\`\\n\\n在项目配置文件中进行配置：\\n\\n删除head中的缩放设定：\\n\\n\`\`\`javascript\\n head: {\\n meta: [\\n  //删除的内容\\n  { name: 'viewport', content: 'width=device-width, initial-scale=1' }\\n  // \\n ],\\n}\\n\`\`\`\\n\\n\\n\`\`\`javascript\\n  // ...前面的代码\\n  /*\\n  ** Build configuration 第三方模块\\n  */\\n  build: {\\n    transpile: [/^element-ui/],\\n    postcss: {\\n      plugins: {\\n        'postcss-plugin-px2rem': {\\n          rootValue: 54, // 换算基数，默认100，自行根据效果调整。\\n          mediaQuery: false, // （布尔值）允许在媒体查询中转换px。\\n          minPixelValue: 3 // 设置要替换的最小像素值默认0，这里表示大于3px会被转rem。\\n        }\\n      },\\n      preset: {\\n        // 更改postcss-preset-env 设置\\n        autoprefixer: {}\\n      }\\n    }\\n  // ...后面的代码\\n\`\`\`\\n### 4、路由配置\\n\\n不同于vue中可以自由定义的方式，在这里，项目路由和pages目录绑定了，Nuxt.js 依据 pages 目录结构，自动生成 vue-router 模块的路由配置。\\n\\n比如项目中， pages 目录如下：\\n\\n![image](https://img-blog.csdnimg.cn/img_convert/3503607dc999c971bb71dceba981a8c2.jpeg)\\n\\n那么你就可以通过\`http://项目域名/\`、\`http://项目域名/page\`、\`http://项目域名/join\`、\`http://项目域名/project\`来访问相应的页面了。\\n\\n### 5、使用中间件\\n\\n在开头初始化项目的时候，我们引入了koa，koa是NodeJs的一个服务端集成框架，引入这个框架意味着我们可以在项目中定义中间件来在页面渲染之前定义函数，来执行一些特定的操作。\\n\\n比如说我在项目中使用了中间件，来对终端进行判断，从而在页面渲染之前判断用户终端是移动端还是Pc端，进而选择展示移动端页面还是PC端页面。\\n\\n\`\`\`javascript\\n/**\\n* middleware/device.js\\n*/\\n\\nexport default function(context) {\\n  const isMobile = (ua) => {\\n    return !!ua.match(/AppleWebKit.*Mobile.*/)\\n  }\\n  const reg = /\\\\/m|\\\\/m\\\\//\\n  const hasMPath = reg.test(context.route.fullPath)\\n  const userAgent = context.req ? context.req.headers['user-agent'] : ''\\n\\n  if (!isMobile(userAgent)) {\\n  // 若终端为pc但是路径中包含/m/或者/m的\\n    if (hasMPath) {\\n      // ...\\n    }\\n  } else {\\n    // 若终端为mobile但是路径中不包含/m/或者/m的\\n    // 重定向到mobile\\n    if (!hasMPath) {\\n      // ...\\n    }\\n  }\\n}\\n\\n\`\`\`\\n\\n在项目配置文件中进行配置：\\n\\n\`\`\`javascript\\n  // ...前面的代码\\n  router: {\\n    // 在每页渲染前运行中间件判断终端，是移动端还是pc端\\n    middleware: ['device']\\n  },\\n  // ...后面的代码\\n\`\`\`\\n\\n### 6、项目热更新\\n\\n为了开发便利，需要给项目进行热更新配置，保存代码不用刷新页面便可看到修改效果。\\n引入依赖包：\\n\\n\`\`\`bash\\ncnpm install --save cross-env nodemon\\n\`\`\`\\n\\n修改webpack配置package.json：\\n\\n将开发命令\\n\`\`\`json\\n\\"scripts\\": {\\n    \\"dev\\": \\"nuxt\\",\\n    \\"build\\": \\"nuxt build\\",\\n    \\"start\\": \\"nuxt start\\",\\n    \\"generate\\": \\"nuxt generate\\"\\n  }\\n\`\`\`\\n\\n改为\\n\\n\`\`\`json\\n\\"scripts\\": {\\n    \\"dev\\": \\"cross-env NODE_ENV=development nodemon server/index.js --watch server\\",\\n    \\"build\\": \\"nuxt build\\",\\n    \\"start\\": \\"cross-env NODE_ENV=production node server/index.js\\",\\n    \\"generate\\": \\"nuxt generate\\"\\n  }\\n\`\`\`\\n\\n接下来在运行\`npm run start\`或是\`npm run dev\`时便会启动热更新。\\n\\n>  项目基本配置完成，接下来就可以进行开发啦\\n\\n## 三、遇到的问题\\n\\n### 1、怎么通过判断用户终端，来达到为其显示PC端布局还是移动端布局。\\n\\nUI设计师给的设计稿显示，官网PC端和移动端的是同一风格的两套不同布局。\\n\\n由于便于后期维护，我并不想单独写两个项目来区分PC端和移动端。\\n\\n所以我最终选择了在一个项目中将PC端和移动端的页面中的设计元素拆分封装成一个个组件，如果设计相似，那其实组件就可复用了。不同页面就组合需要的组件，像搭积木一样组成完整页面，再根据中间件给的终端标识值，选择显示页面的PC端组件还是移动端组件。\\n\\n### 2、存储中间件中的终端标识值。\\n\\n通过添加中间件，在中间件业务逻辑中判断终端是移动端还是pc端，将判断结果用自定义常量标识值表示。为了方便统一冠以标识值的同步和存储，我在项目中引入了vuex，通过koa+vuex结合，管理终端标识值。\\n\\n在上述提到的中间件定义逻辑中，添加更新vuex状态的逻辑：\\n\\n\`\`\`javascript\\nexport default function(context) {\\n  const isMobile = (ua) => {\\n    return !!ua.match(/AppleWebKit.*Mobile.*/)\\n  }\\n  const reg = /\\\\/m|\\\\/m\\\\//\\n  const hasMPath = reg.test(context.route.fullPath)\\n  const userAgent = context.req ? context.req.headers['user-agent'] : ''\\n\\n  if (!isMobile(userAgent)) {\\n    context.store.commit('SET_DEVICE_TYPE', 1)\\n    // 若终端为pc但是路径中包含/m/或者/m的\\n    if (hasMPath) {\\n      context.store.commit('SET_DEVICE_TYPE', 2)\\n      // 重定向到pc\\n      const url = context.route.fullPath.substring(2)\\n      context.redirect(url)\\n    }\\n  } else {\\n    context.store.commit('SET_DEVICE_TYPE', 2)\\n    context.store.commit('SET_PAGE_TYPE', 2)\\n    // 若终端为mobile但是路径中不包含/m/或者/m的\\n    // 重定向到mobile\\n    if (!hasMPath) {\\n      context.store.commit('SET_DEVICE_TYPE', 1)\\n      context.redirect(\`/m\${context.route.fullPath}\`)\\n    }\\n  }\\n}\\n\`\`\`\\n\\n### 3、移动端点击事件响应延迟的问题\\n\\n在部分老机型上，存在网页点击事件响应延迟的问题，这是因为移动端有个两次连续“轻触”是“放大”的操作，在你第一次被“轻触”后，浏览器需要先等一段时间，若有“连续的第二次轻触”，则进行“放大”操作，否则就执行click事件，这就导致了移动端所谓的300ms click延迟。\\n\\n一般会在项目中引入fastclick.js来解决这个问题，但是在该项目中按照官方文档的方式引入该插件，发现了页面刚开始加载出来时，有一小段时间是依旧存在击事件响应延迟问题的，一段时间后问题消失。\\n\\n后来发现是按照官方方法在项目中引入插件，有一个加载插件的过程。这个过程中，fastclick.js还未生效，所以问题还是存在。\\n\\n后来改成直接在head属性中直接引入，先行加载必要的css以及js文件，很好的解决了等待加载页面事件的布局混乱和点击事件响应延迟的问题。\\n\\n## 四、总结\\n\\n在面对未知的框架或语言时，我总是会对其有一份畏惧之情，不论是本文的中心Nuxt.js，还是正在吐血学习中的React和TypeScript，想学和怕学的情绪在脑子里像两个小人在干架～[doge头]，但是当真正静下心来去研究每一份新的知识，并将其运用到项目中，那种充实感和喜悦感怕是只有正在学习和前进的你我才能体会到啦～\\n\\n上一家公司的官网我就是使用了Nuxt+koa来实现的。\\n\\n这里贴上地址，比较简单的几个静态页面：[前公司官网](https://www.xiaomalixing.com/)\\n",
    "tagIds": "17,12,13,23",
    "author": "菜头",
    "authorAvatar": "http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif",
    "weight": 1,
    "type": 1,
    "groupTimestamp": "1607782336520",
    "cover": "https://blog.hashinteractive.com/wp-content/uploads/2020/02/nuxt-docker.jpg",
    "categoryId": 1,
    "created_at": "2023-11-06T14:23:09.000Z",
    "updated_at": "2023-11-08T04:36:14.000Z",
    "tagList": [
        {
            "id": 12,
            "name": "ES6"
        },
        {
            "id": 13,
            "name": "NodeJS"
        },
        {
            "id": 17,
            "name": "Koa"
        },
        {
            "id": 23,
            "name": "NuxtJS"
        }
    ],
    "createDate": "2020-12-12"
}`,K='{\n    "id": 17,\n    "title": "在本地环境上用pm2跑koa+ts项目",\n    "subTitle": "记录遇到的坑",\n    "link": null,\n    "description": "最近在用node和ts来写前后端分离的项目，云服务器到期且并没有续费的打算，所以打算在本地环境捣鼓。网上的教程大多都是指导如何在云服务器上部署koa并用pm2守护进程。自己依葫芦画瓢在本地整了一套，故记录一下。",\n    "content": "## 一、简单介绍PM2\\n\\n开始之前先了解一下什么是pm2，这次认认真真逐字逐句的读了下概念，之前大致知道这是一个管理node进程的工具，把它笼统的归类于与phpstydy、nginx类似的工具，但是其实并不完全一致。\\n\\npm2一般来说是用于我们的生产环境，也就是云服务器上的node进程管理工具（废话），它不仅能进行进程守护，同时也支持性能监控、负载均衡等的功能，并且还可以使用命令来取查看我们node进程的状态，小白友好上手简单。我之前错误的认为它和phpstydy、nginx类似，更贴切的来讲，它其实更像是Linux的进程管理工具Supervisor或者Forever。\\n\\n## 二、我用它来解决什么问题？\\n\\n很简单，我主要是用来解决本地开发的时候，不用每次得用命令行工具cd到项目目录用命令去启动接口服务，我需要项目接口在我需要的时候一直运行着，且不会因为误触命令行工具关闭按钮时而挂掉服务。\\n\\n同理，云服务器其实就可以看成一部虚拟的计算机，在服务器上用pm2，其实也是解决的一样的问题。\\n\\n## 三、pm2的特性\\n\\n* **pm2在后台运行**。例如`node app.js`这样的命令，是需要一直在前台运行，容易因为代码错误或者是命令行工具的问题导致中断，不稳定。pm2在后台运行，也支持将错误用log文件输出的方式记录。\\n* **0 秒停机重载**。它能立即重新启动应用的所有进程并在重新加载代码后将请求，路由到新的进程，这意味着在应用维护升级的时候是不需要停机的，node服务不会中断，但这种处理方式不可避免的会造成一些请求失败和丢失。\\n* **内建负载均衡**。使用node cluster集群模块，可以自由的设置每次启动的进程的个数，如果设置为0，意味着它会根据服务器CPU的使用情况来灵活的设置进程的数量。\\n* **停止不稳定的进程**。可以避免死循环。\\n* **控制台监测**。可以在控制台实时监测运行情况。\\n* **多平台支持**。支持各大主流平台如Linux、MacOs、Windows等\\n\\n## 四、安装和使用\\n* 安装\\n   ```bash\\n   # 全局安装\\n   npm install -g pm2\\n   ```\\n   \\n\\n* 启动项目\\n  ```bash\\n  # 1、首先cd到项目的根目录下，也就是项目入口文件同级的目录下\\n  # 2、执行指定应用 pm2 start [配置文件/入口文件] --name [项目名字]\\n  pm2 start app.ts --name web_blog\\n  ```\\n  \\n* 常用命令\\n  ```bash\\n  # 查看当前进程\\n  pm2 ls\\n  # 停止应用进程\\n  pm2 stop\\n  # 重启进程\\n  pm2 restart [项目名字]\\n  # 杀掉所有应用的进程\\n  pm2 kill\\n  # 删除应用后台服务\\n  pm2 delete\\n  ```\\n  \\n## 五、在项目koa中的配置\\n\\n在koa项目中使用pm2，需要进行一些配置\\n\\n### 1、npm一些必须得包\\n\\n```bash\\n# 安装pm2\\nnpm install --save pm2\\n# 安装ts支持，使我们可以直接运行ts文件\\nnpm install --save-dev ts-node typescript\\n```\\n\\n### 2、创建配置文件\\n\\n```bash\\n# 创建配置文件pm2.json\\ntouch pm2.json\\n```\\n\\n#### pm2.json\\n\\n```json\\n{\\n    \\"apps\\": [\\n        {\\n            \\"name\\": \\"production\\",\\n            \\"script\\": \\"./app.ts\\",\\n            \\"exec_mode\\": \\"cluster\\",\\n            \\"instances\\": 1,\\n            \\"cron_restart\\": \\"0 03 * * *\\",\\n            \\"autorestart\\": true,\\n            \\"watch\\": false,\\n            \\"min_uptime\\": \\"200s\\",\\n            \\"max_restarts\\": 10,\\n            \\"ignore_watch\\": [\\n                \\"node_modules\\",\\n                \\".idea\\",\\n                \\"log\\"\\n            ],\\n            \\"max_memory_restart\\": \\"100M\\",\\n            \\"restart_delay\\": \\"3000\\",\\n            \\"env\\": {\\n                \\"NODE_ENV\\": \\"production\\"\\n            },\\n            \\"error_file\\": \\"./log/app-err.log\\",\\n            \\"out_file\\": \\"./log/app-out.log\\",\\n            \\"merge_logs\\": true,\\n            \\"log_date_format\\": \\"YYYY-MM-DD HH:mm:ss\\"\\n        }\\n    ]\\n}\\n```\\n\\n### 3、在package.json文件配置命令\\n\\n```json\\n    \\"scripts\\": {\\n        \\"prod\\": \\"pm2 start config/pm2.json --only production\\",\\n        \\"start\\": \\"pm2 start app.ts --name web_blog\\",\\n        \\"stop\\": \\"pm2 stop config/pm2.config.ts\\",\\n        \\"delete\\": \\"pm2 delete config/pm2.config.ts\\",\\n        \\"list\\": \\"pm2 list\\",\\n        \\"kill\\": \\"pm2 kill\\"\\n    }\\n```\\n\\n至此，在项目根目录下运行`npm run prod`便可启动项目\\n\\n![image](https://img-blog.csdnimg.cn/22fafe113a164e2ea6a140d241de3b4b.png)\\n\\n## 六、遇到的一些问题\\n### 1、运行npm run prod报错。\\n\\n![image](https://img-blog.csdnimg.cn/af7802f8959547d695983421eaaaab9e.png)\\n\\n原因：没有指定ts-node目录，故找不到模块来支持执行ts文件。\\n解决：为项目指定ts-node目录\\n\\n```json\\n{\\n    \\"apps\\": [\\n        {\\n            // 前面还有一点...\\n            \\"interpreter\\": \\"./node_modules/.bin/ts-node\\",\\n            // 后面还有很多...\\n        }\\n    ]\\n}\\n```\\n\\n暂时没有遇到其他问题，待续...",\n    "tagIds": "13,17,16,36",\n    "author": "菜头",\n    "authorAvatar": "http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif",\n    "weight": 78,\n    "type": 1,\n    "groupTimestamp": "1694703444833",\n    "cover": "https://raw.githubusercontent.com/Unitech/pm2/master/pres/pm2-v3.png",\n    "categoryId": 4,\n    "created_at": "2023-11-09T15:04:06.000Z",\n    "updated_at": "2023-11-09T16:55:32.000Z",\n    "tagList": [\n        {\n            "id": 13,\n            "name": "NodeJS"\n        },\n        {\n            "id": 16,\n            "name": "TypeScript"\n        },\n        {\n            "id": 17,\n            "name": "Koa"\n        },\n        {\n            "id": 36,\n            "name": "pm2"\n        }\n    ],\n    "createDate": "2023-09-14"\n}',nn='{\n    "id": 2,\n    "title": "JavaScript中数组的常用方法",\n    "subTitle": "包含es6中的数组方法",\n    "link": null,\n    "description": "记录在开发中经常会遇到、用到的处理数组的方法",\n    "content": "## 1.concat()，不改变原数组\\n\\n**`arr1.concat(arr2)`连接两个或多个数组，返回一个新的数组**\\n\\n``` javascript\\nconst arr1 = [1, 2, 3]\\nconst arr2 = [4, 5]\\nconst newArr = arr1.concat(arr2)\\nconsole.log(newArr) // [1, 2, 3, 4, 5]\\n```\\n\\n## 2.join()，不改变原数组\\n\\n* **join(str) 数组转字符串，方法只接受一个参数，默认为逗号分隔符**\\n\\n``` javascript\\nconat arr = [1, 2, 3]\\nconsole.log(arr) // [1, 2, 3]\\nconsole.log(arr.join()) // 1,2,3\\nconsole.log(arr.join(:)) // 1:2:3\\n```\\n\\n应用：join() 实现重复字符串：\\n\\n``` javascript\\nconst str = new Array(4).join(\'啦\')\\nconsole.log(str) // 啦啦啦\\n```\\n\\n## 3.push() & unshift() 添加元素操作，改变原数组\\n\\n* **push() 向数组的末尾添加一个或多个元素，并返回新的长度**\\n\\n``` javascript\\nconst arr = [1, 2]\\nconsole.log(arr.push(3)) // 3\\nconsole.log(arr) // [1, 2, 3]\\n```\\n\\n* **unshift() 向数组的开头添加一个或多个元素，并返回新的长度**\\n\\n``` javascript\\nconst arr = [1, 2]\\nconsole.log(arr.unshift(3)) // 3\\nconsole.log(arr) // [3, 1, 2]\\n```\\n\\n## 4.shift() & pop() 删除元素操作，改变原数组\\n\\n* **shift() 删除并返回数组第一个元素**\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst deleteItem = arr.shift()\\nconsole.log(arr) // [2, 3]\\nconsole.log(deleteItem) // 1\\n```\\n\\n* **pop() 删除并返回数组最后一个元素**\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst deleteItem = arr.pop()\\nconsole.log(arr) // [1, 2]\\nconsole.log(deleteItem) // 3\\n```\\n\\n## 5.sort() 数组排序，改变原数组\\n\\n* **sort() 对数组的元素进行排序**\\n\\n``` javascript\\nconst arr = [2, 4, 3, 1]\\nconsole.log(arr.sort()) // [1, 2, 3, 4]\\nconsole.log(arr) // [1, 2, 3, 4]\\n```\\n\\n应用: sort() 不按照数组元素数值的大小对数字进行排序，是按照字符编码的顺序进行排序，那怎么样根据元素数值大小进行排序的呢\\n\\n``` javascript\\nconst arr = [2, 4, 3, 1]\\nconst arr1 = [...arr].sort((a, b) => a - b)\\nconst arr2 = [...arr].sort((a, b) => b - a)\\nconsole.log(arr1) // [1, 2, 3, 4]\\nconsole.log(arr2) // [4, 3, 2, 1]\\n```\\n\\n## 6.reverse() 反转数组，改变原数组\\n\\n* **reverse() 颠倒数组中元素的顺序**\\n\\n``` javascript\\nconst arr = [2, 4, 3, 1]\\nconsole.log(arr.reverse()) // [1, 3, 4, 2]\\nconsole.log(arr) // [1, 3, 4, 2]\\n```\\n\\n## 7.slice() 截取数组，不改变原数组\\n\\n* **`arr.slice(start, end)`从start处开始选取（不包括该元素），从end处结束选取，如果为空的话，那么选取从start到数组结束的所有元素。负数代表方向，从数组尾部开始计算位置**\\n\\n``` javascript\\nconst arr = [1, 2, 3, 4, 6]\\nconsole.log(arr.slice(1)) // [2, 3, 4, 6]\\nconsole.log(arr.slice(1, -2)) // [2, 3]\\nconsole.log(arr.slice(-3, 1)) // [2]\\nconsole.log(arr) // [1, 2, 3, 4, 6]\\n```\\n\\n## 8.splice() 更新数组，改变原数组\\n\\n* **`arr.splice(index, howmany, item1, ..., itemX)`向/从数组中添加/删除项目，然后返回被删除的项目，返回含有被删除的元素的数组，若没有删除元素则返回一个空数组。**\\n\\n1.  [index] 必传项，整数，规定添加/删除项目的位置，负数表示从数组结尾处规定位置\\n2.  [howmany] 必传项，要删除的项目数量。如果设置为 0，则不会删除项目\\n3.  [item1, ..., itemX] 可选。向数组添加的新项目。\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst arr1 = arr.splice(2, 1)\\nconsole.log(arr1) // [3]\\nconsole.log(arr) // [1, 2]\\n\\nconst arr2 = arr.splice(1, 0, \'ss\')\\nconsole.log(arr2) // [\'ss\']\\nconsole.log(arr) // [1,\'ss\', 2]\\n```\\n\\n## 9. indexOf() & lastIndexOf()  索引方法，不改变原数组\\n\\n**两个方法都是返回要查找的项所在数组中首次出现的位置，没找到的话就返回-1。**\\n\\n* **`arr.indexOf(item, start)`从数组的开头开始向后寻找。**\\n\\n* **`arr.lastIndexOf(item, start)`从数组的末尾开始向前查找。**\\n\\n1. [item] 必须项，查找的元素\\n2. [start] 可选，在数组中开始检索的位置，默认0\\n\\n``` javascript\\nconst arr = [2, 4, 1, 9, 1, 2]\\nconsole.log(arr.indexOf(2)) // 0\\nconsole.log(arr.lastIndexOf(1)) // 1\\nconsole.log(arr.indexOf(3)) // -1\\n```\\n\\n## 10.find() & findIndex() 根据函数内的判断返回找到的数组内的第一个元素，不改变原数组（es6新增）\\n\\n* **`arr.find((currentValue, index, arr) => {})`返回通过测试函数内判断的数组的第一个元素的值。当数组中的元素在测试函数中返回true时，返回符合条件的元素，之后不再调用测试函数判断剩下的元素，如果每个元素都执行了测试函数，没有符合的元素，则返回undefined。**\\n\\n``` javascript\\nconst arr = [1, 2, 3, 4]\\nconst findItem = arr.find((item, index) => {\\n    return item > 2\\n})\\nconst findItem1 = arr.find((item, index) => {\\n    return item > 5\\n})\\nconsole.log(findItem) // 3\\nconsole.log(findItem1) // undefined\\n```\\n\\n\\n* **`findIndex((currentValue, index, arr) => {})`用法和find()一样，不同的是不是返回数组内元素，而是返回符合测试函数判断的元素索引值，如果没有符合条件的元素返回 -1。**\\n\\n``` javascript\\nconst arr = [1, 2, 3, 4]\\nconst findItemIndex = arr.findIndex((item, index) => {\\n    return item > 2\\n})\\nconst findItemIndex1 = arr.findIndex((item, index) => {\\n    return item > 5\\n})\\nconsole.log(findItemIndex) // 2\\nconsole.log(findItemIndex1) // -1\\n```\\n\\n**对于空数组不执行**\\n1. [currentValue] 必须项，当前元素\\n2. [index] 可选。当前元素的索引值\\n3. [arr] 可选。当前元素所属的数组对象\\n\\n## 11.forEach()、map()、filter()、some()、every() 迭代方法，不改变原数组\\n\\n* **`arr.forEach((currentValue , index , arr) => {},  thisValue)` 对数组进行遍历循环，这个方法没有返回值。**\\n\\n**对于空数组不执行**\\n1. [currentValue] 必须项，当前元素\\n2. [index] 可选。当前元素的索引值\\n3. [arr] 可选。当前元素所属的数组对象\\n4. [thisValue] 可选。传递给函数的值一般用`\\"this\\"`值。如果这个参数为空，`\\"undefined\\"`会传递给`\\"this\\"`值。\\n\\n``` javascript\\nconst arr = [1,4,7,10];\\narr.forEach((currentValue, index, arr) => {\\n\\tconsole.log(index + \\"--\\" + currentValue + \\"--\\" + (arr === Arr))\\t\\n})\\n// 输出：\\n// 0--1--true\\n// 1--4--true\\n// 2--7--true\\n// 3--10--true\\t\\n```\\n\\n* **`arr.map((currentValue , index , arr) => {},  thisValue)` 指“映射”，方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。（不会改变数组长度，和原数组长度保持一致）**\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst arr1 = arr.map((currentValue) => {\\n\\treturn currentValue + 1\\n})\\nconsole.log(arr) // [1, 2, 3]\\nconsole.log(arr1) // [2, 3, 4]\\n```\\n\\n* **`arr.filter((currentValue , index , arr) => {},  thisValue)` “过滤”功能，方法创建一个新数组，其包含通过所提供函数实现的测试的所有元素。（可以改变数组长度，不必和原数组长度保持一致）**\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst arr1 = arr.filter((currentValue) => {\\n\\treturn currentValue > 1\\n})\\nconst arr2 = arr.filter((currentValue) => {\\n\\treturn currentValue > \'1\'\\n})\\nconsole.log(arr) // [1, 2, 3]\\nconsole.log(arr1) // [2, 3]\\nconsole.log(arr2) // [2, 3]\\n```\\n\\narr1和arr2结果一致，可以看出函数支持弱等于，不是必须全等于\\n\\n* **`arr.some((currentValue , index , arr) => {},  thisValue)` 判断数组中是否存在满足条件的项，只要有一项满足条件，就会返回true，不再往下执行。**\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst str = arr.some((currentValue) => {\\n\\tconsole.log(currentValue)\\n\\treturn currentValue > 1\\n})\\n// 1\\n// 2\\nconsole.log(str) // true\\n```\\n\\n* **`arr.every((currentValue , index , arr) => {},  thisValue)` 判断数组中的每一项是否都满足条件，全部符合就会返回true，否则false。**\\n\\n``` javascript\\nconst arr = [1, 2, 3]\\nconst str = arr.every((currentValue) => {\\n\\treturn currentValue > 1\\n})\\nconsole.log(str) // false\\n```\\n\\n## 12.reduce()、reduceRight() 归并方法，不改变原数组\\n\\n这两个方法都会迭代数组中的所有项，然后生成一个最终返回值。他们都接收两个参数，第一个参数是每一项调用的函数，函数接受四个参数分别是初始值，当前值，索引值，和当前数组，函数需要返回一个值，这个值会在下一次迭代中作为初始值。第二个参数是迭代初始值，参数可选，如果缺省，初始值为数组第一项，从数组第一个项开始叠加，缺省参数要比正常传值少一次运算。\\n\\n1. [total] 必须项，初始值, 或者计算结束后的返回值。\\n2. [cur] 必须项，当前元素。\\n3. [index] 可选。当前元素的索引值\\n4. [arr] 可选。当前元素所属的数组对象\\n5. [initialValue] 可选。传递给函数的初始值。\\n\\n* **`arr.reduce((total , cur , index , arr) => {}, initialValue)` 从数组的第一项开始，逐个遍历到最后**\\n\\n* **`arr.reduceRight((total , cur , index , arr) => {}, initialValue)` 从数组的最后一项开始，向前遍历到第一项**\\n\\n``` javascript\\nconst arr = [1,2,3,4,5]\\nconst result1 = arr.reduce((total,cur,index,arr) => {\\t\\n\\tconsole.log(\\"total:\\" + total + \\",cur:\\" + cur + \\",index:\\" + index)\\n    return total + cur\\n})\\nconsole.log(\\"结果：\\" + result1)\\n// 输出\\n// total:1,cur:2,index:1\\n// total:3,cur:3,index:2\\n// total:6,cur:4,index:3\\n// total:10,cur:5,index:4\\n// 结果：15\\n\\n\\nconst result2 = arr.reduce((total,cur,index,arr) => {\\t\\n\\tconsole.log(\\"total:\\" + total + \\",cur:\\" + cur + \\",index:\\" + index)\\n    return total + cur\\n},10)\\nconsole.log(\\"结果：\\" + result2)\\n// 输出\\n// total:10,cur:1,index:0\\n// total:11,cur:2,index:1\\n// total:13,cur:3,index:2\\n// total:16,cur:4,index:3\\n// total:20,cur:5,index:4\\n// 结果：25\\n```\\n\\n从上面代码我们可以看出，当我们不给函数传递迭代初始值时初始值 total 为数组第一项，函数从数组第二项开始迭代；若我们给函数传递迭代初始值，则函数从数组第一项开始迭代。\\n\\n## 13.keys()、values()、entries() 遍历数组方法,不改变原数组（es6新增）\\n\\n* **keys() 对键名的遍历**\\n\\n``` javascript\\nconst arr = [\\"a\\",\\"b\\",\\"c\\",\\"d\\"]\\nfor(let i of arr.keys()){\\n\\tconsole.log(i)\\n}\\n//打印：\\n// 0\\n// 1\\n// 2\\n// 3\\n\\n```\\n\\n* **values()对键值的遍历**\\n\\n``` javascript\\nconst arr = [\\"a\\",\\"b\\",\\"c\\",\\"d\\"]\\nfor(let i of arr.values()){\\n\\tconsole.log(i)\\n}\\n//打印：\\n// a\\n// b\\n// c\\n// d\\n\\n\\n```\\n\\n* **entries()是对键值对的遍历。**\\n\\n``` javascript\\nconst arr = [\\"a\\",\\"b\\",\\"c\\",\\"d\\"]\\nfor(let i of arr.entries()){\\n\\tconsole.log(i)\\n}\\n//打印：\\n// [0, \\"a\\"]\\n// [1, \\"b\\"]\\n// [2, \\"c\\"]\\n// [3, \\"d\\"]\\nfor(let [idx,item] of arr.entries()){\\n    console.log(idx + \\":\\"+item)\\n}\\n//打印：\\n// 0:a\\n// 1:b\\n// 2:c\\n// 3:d\\n\\n```\\n\\n## 14.includes() 不改变原数组（es6新增）\\n\\n* **`arr.includes(searchElement ,  fromIndex)` 用来判断一个数组是否包含一个指定的值，如果是返回 true，否则false。**\\n\\n1. [searchElement] 可选。需要查找的元素值。\\n2. [fromIndex] 可选。从该索引处开始查找 searchElement。如果为负值，则按升序从`array.length + fromIndex`的索引开始搜索。默认为 0。\\n\\n``` javascript\\nconst arr = [\\"a\\",\\"b\\",\\"c\\",\\"d\\"]\\nconst result1 = arr.includes(\\"b\\")\\nconst result2 = arr.includes(\\"b\\",2)\\nconst result3 = arr.includes(\\"b\\",-1)\\nconst result4 = arr.includes(\\"b\\",-3)\\nconsole.log(result1)  // true\\nconsole.log(result2)  // false\\nconsole.log(result3)  // flase\\nconsole.log(result4)  // true\\n```\\n\\n## 15.Array.from()（es6新增）\\n\\n* **Array.from() 用于类似数组的对象（即有length属性的对象）和可遍历对象转为真正的数组。**\\n\\n``` javascript\\nconst json ={\\n    \'0\':\'喜\',\\n    \'1\':\'欢\',\\n    \'2\':\'你\',\\n    length:3\\n}\\nconst arr = Array.from(json)\\nconsole.log(arr) // [\\"喜\\", \\"欢\\", \\"你\\"]\\t\\n\\n```\\n\\n## 16.Array.of()（es6新增）\\n\\n* **Array.of() 将一组值转变为数组，参数不分类型，只分数量，数量为0返回空数组。**\\n\\n``` javascript\\nlet arr1 = Array.of(1,2,3)\\nlet arr2 = Array.of([1,2,3])\\nlet arr3 = Array.of(undefined)\\nlet arr4 = Array.of()\\nconsole.log(arr1) // [1, 2, 3]\\nconsole.log(arr2) // [[1, 2, 3]]\\nconsole.log(arr3) // [undefined]\\nconsole.log(arr4) // []\\n\\n```\\n\\n## 17.fill() 改变原数组（es6新增）\\n\\n**`arr.fill(value,  start,  end)` 用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引。**\\n\\n1. [value] 必需。填充的值。\\n2. [start] 可选。开始填充位置。如果这个参数是负数，那么它规定的是从数组尾部开始算起。\\n3. [end] 可选。停止填充位置 (默认为`array.length`)。如果这个参数是负数，那么它规定的是从数组尾部开始算起。\\n\\n``` javascript\\nlet arr = [1,2,3,4,5,6]\\narr.fill(0)  // [0, 0, 0, 0, 0, 0]\\narr.fill(0,1)  // [1, 0, 0, 0, 0, 0] \\narr.fill(0,1,2)  // [1, 0, 3, 4, 5, 6]\\narr.fill(0,-1)  // [1, 2, 3, 4, 5, 0]\\narr.fill(0,1,-1)  // [1, 0, 0, 0, 0, 6]\\n\\n```\\n\\n## 18.copyWithin() 不改变原数组（es6新增）\\n\\n* **`arr.copyWithin(target,  start,  end)` 用于从数组的指定位置拷贝元素到数组的另一个指定位置中，会覆盖原有成员。**\\n\\n1. [target] 必需。从该位置开始替换数据。\\n2. [start] 可选。从该位置开始读取数据，默认为 0 。如果为负值，表示倒数。\\n3. [end] 可选。到该位置前停止读取数据 (默认为`array.length`)。如果为负值，表示倒数。\\n\\n``` javascript\\nlet arr = [1,2,3,4,5,6]\\nlet result1 = [1,2,3,4,5,6].copyWithin(0)\\nlet result2 = [1,2,3,4,5,6].copyWithin(0,1)\\nlet result3 = [1,2,3,4,5,6].copyWithin(1,3,5)\\nlet result4 = [1,2,3,4,5,6].copyWithin(1,2,-1)\\nlet result5 = [1,2,3,4,5,6].copyWithin(1,-4,6)\\nconsole.log(result1)  // [1, 2, 3, 4, 5, 6]\\nconsole.log(result2)  // [2, 3, 4, 5, 6, 6]\\nconsole.log(result3)  // [1, 4, 5, 4, 5, 6]\\nconsole.log(result4)  // [1, 3, 4, 5, 5, 6]\\nconsole.log(result5)  // [1, 3, 4, 5, 6, 6]\\n\\n```",\n    "tagIds": "5,12,11",\n    "author": "菜头",\n    "authorAvatar": "http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif",\n    "weight": 1,\n    "type": 1,\n    "groupTimestamp": "1549548067227",\n    "cover": "https://boolie.org/wp-content/uploads/2018/07/es6_tutorial_teaser-1.png",\n    "categoryId": 1,\n    "created_at": "2023-11-06T14:06:54.000Z",\n    "updated_at": "2023-11-08T05:04:33.000Z",\n    "tagList": [\n        {\n            "id": 5,\n            "name": "ECMAScript"\n        },\n        {\n            "id": 11,\n            "name": "JavaScript"\n        },\n        {\n            "id": 12,\n            "name": "ES6"\n        }\n    ],\n    "createDate": "2019-02-07"\n}',en='{\n    "id": 3,\n    "title": "在laravel中使用redis队列，发送邮件",\n    "subTitle": "php是这个世界上最好的语言！[doge]",\n    "link": null,\n    "description": "在开发过程中遇到了需要使用队列发送邮件的需求，故记录一小下",\n    "content": "## 一、驱动的选择\\n\\n### 1、使用数据库驱动\\n\\n优点：不用安装其他的啦里啦杂的东西，直接用\\n\\n缺点：要进行数据库迁移，产生工作数据表\\n\\n#### 1-1 .env文件中设置队列驱动为数据库\\n\\n``` bash\\nphp artisan queue:table\\n```\\n\\n\\n#### 1-2 创建队列用到的数据表\\n\\n``` bash\\nphp artisan queue:table\\n```\\n\\n\\n#### 1-3 执行migrate\\n\\n``` bash\\n# 会新建 database/migrations/{timestamp}_create_jobs_table.php 文件\\nphp artisan migrate\\n```\\n\\n\\n#### 1-4 .env文件示例\\n\\n``` bash\\nBROADCAST_DRIVER=log\\nCACHE_DRIVER=file\\nSESSION_DRIVER=file\\nQUEUE_DRIVER=database\\n\\nREDIS_HOST=127.0.0.1\\nREDIS_PASSWORD=null\\nREDIS_PORT=6379\\n\\nMAIL_DRIVER=smtp\\nMAIL_HOST=smtp.exmail.qq.com // QQ企业邮箱\\nMAIL_PORT=25 // 使用25端口\\nMAIL_USERNAME=xxxx@xxx.com // 发件人邮箱\\nMAIL_PASSWORD=*** // 密码或授权码\\nMAIL_ENCRYPTION=tls\\n```\\n\\n### 2、使用redis驱动\\n\\n#### 2-1 安装redis\\n\\n* windows下\\n\\n[windows下载地址](https://github.com/MSOpenTech/redis/releases)，下载运行安装即可。\\n\\n![64bit-redis](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/15/16c944bdcd4cd4d2~tplv-t2oaga2asx-image.image)\\n\\n打开一个cmd窗口使用cd命令切换目录到```C:\\\\redis```运行```redis-server.exe redis.windows.conf```\\n\\n* Linux下\\n\\n``` bash\\n# 看看有木有密码\\n/etc/redis.conf port6379\\n```\\n\\n#### 2-1 项目中使用  Composer 安装依赖\\n\\n``` bash\\ncomposer require \\"predis/predis:~1.0\\" \\n```\\n\\n#### 2-3 .env文件示例\\n\\n``` bash\\nDB_CONNECTION=mysql\\nDB_HOST=localhost\\nDB_PORT=3306\\nDB_DATABASE=honeybot\\nDB_USERNAME=root\\nDB_PASSWORD=root\\n\\nBROADCAST_DRIVER=log\\nCACHE_DRIVER=file\\nSESSION_DRIVER=file\\nQUEUE_DRIVER=redis\\n\\nREDIS_HOST=127.0.0.1\\nREDIS_PASSWORD=null\\nREDIS_PORT=6379\\n\\nMAIL_DRIVER=smtp\\nMAIL_HOST=smtp.exmail.qq.com\\nMAIL_PORT=465 // 使用465端口\\nMAIL_USERNAME=xxx@xxx.com\\nMAIL_PASSWORD=***\\nMAIL_ENCRYPTION=ssl // 使用465端口\\n```\\n\\n\\n## 二、失败任务记录（可有可无，看你自己想不想记录）\\n\\n有时候队列中的任务会失败。Laravel 内置了一个方便的方式来指定任务重试的最大次数。当任务超出这个重试次数后，它就会被插入到 failed_jobs 数据表里面。我们可以使用```queue:failed-table```命令来创建 failed_jobs 表的迁移文件\\n\\n``` bash\\n# 会新建 database/migrations/{timestamp}_create_failed_jobs_table.php 文件\\n php artisan queue:failed-table\\n ```\\n \\n 接着使用 migrate Artisan 命令生成 failed_jobs 表：\\n ``` bash\\n php artisan migrate\\n ```\\n \\n## 三、创建任务\\n\\n创建任务 = 搞一个生产者 = （其实就是写一个在队列中你想执行的业务逻辑）,名字随意取，但最好遵守命名规范。\\n \\n这个生成的文件大概分2部分：一是__construct() 构造方法 ；二是handle 队列执行方法(意思就是在队列执行的时候，就用你这里面写的代码)\\n \\n### 1、使用以下 Artisan 命令来生成一个新的队列任务：\\n\\n ``` bash\\n # 该命令会在 app/Jobs 目录下生成一个新的类\\n php artisan make:job SendReminderEmail\\n ```\\n\\n新生成的类：pp/Jobs/SendReminderEmail.php\\n\\n``` php\\nnamespace App\\\\Jobs;\\n\\nuse Illuminate\\\\Bus\\\\Queueable;\\nuse Illuminate\\\\Queue\\\\SerializesModels;\\nuse Illuminate\\\\Queue\\\\InteractsWithQueue;\\nuse Illuminate\\\\Contracts\\\\Queue\\\\ShouldQueue;\\nuse Illuminate\\\\Foundation\\\\Bus\\\\Dispatchable;\\nuse App\\\\Util\\\\L;\\nuse Mail;\\n\\nclass SendReminderEmail implements ShouldQueue\\n{\\n    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\\n\\n    protected $orderInfo;\\n    protected $email;\\n\\n    /**\\n     * Create a new job instance.\\n     *\\n     * @return void\\n     */\\n    public function __construct($orderInfo, $email)\\n    {\\n        $this->orderInfo = $orderInfo;\\n        $this->email = $email;\\n    }\\n\\n    /**\\n     * Execute the job.\\n     *\\n     * @return void\\n     */\\n    public function handle()\\n    {\\n        // Mail::send()的返回值为空，所以可以其他方法进行判断\\n        Mail::send(\'emails.new_order_mail\',\\n            [\\n                \'order_number\' => $this->orderInfo[\'order_number\'],\\n                \'goods_name\' => $this->orderInfo[\'goods_name\'],\\n                \'goods_color\' => $this->orderInfo[\'goods_color\'],\\n                \'goods_num\' => $this->orderInfo[\'goods_num\']\\n            ],\\n            function ($message) {\\n                $to = $this->email;\\n                $message->to($to)->subject(\'【xx商城新订单通知】\');\\n            });\\n        // 返回的一个错误数组，利用此可以判断是否发送成功\\n        if (count(Mail::failures()) >= 1) {\\n            L::email(\\"订单：\\" . $this->orderInfo[\'order_number\'] . \\"的 \\" . $this->email . \\" 邮件通知发送失败\\");\\n        }\\n    }\\n}\\n ```\\n \\n### 2、任务分发\\n \\n#### 2-1 生产者，在控制器内使用dispatch方法调用即可\\n\\n``` php\\nnamespace App\\\\Api\\\\Controllers\\\\Mail;\\nuse App\\\\Api\\\\Controllers\\\\BaseController;\\nuse App\\\\Repositories\\\\Order\\\\OrderRepository;\\n\\nclass MailController extends BaseController\\n{\\n    public function __construct(OrderRepository $order)\\n    {\\n        $this->order = $order;\\n    }\\n\\n    public function send()\\n    {\\n        $header_id = 3691;\\n        $this->order->sendMail($header_id);\\n    }\\n}\\n```\\n \\n\\n#### 2-2 定义发送邮件的类，分发任务\\n\\n ``` php\\n /**\\n     * @param $header_id\\n     * @return mixed\\n     * 发送邮件 队列\\n     */\\n    public function sendMail($header_id)\\n    {\\n        try {\\n            // 邮件内容\\n            $orderInfo = OrderDetail::select(\'order_number\', \'order_lines.*\')\\n                ->leftJoin(\'order_headers\', \'order_headers.uid\', \'=\', \'header_id\')\\n                ->where(\'header_id\', $header_id)\\n                ->first();\\n            $order[\'order_number\'] = $orderInfo->order_number;\\n            $order[\'goods_name\'] = \'嘻嘻\' . $orderInfo->combo;\\n            $order[\'goods_color\'] = $orderInfo->color;\\n            $order[\'goods_num\'] = $orderInfo->quantity;\\n            L::email(\\"订单：\\" . $orderInfo->order_number);\\n            // 邮件地址列表\\n            $emailList = [\\"xxx@qq.com\\", \\"xxx@163.com\\"]; // 测试 邮件地址\\n            // 推送任务入队列\\n            foreach ($emailList as $email) {\\n                dispatch(new SendReminderEmail($order, $email));\\n            }\\n        } catch (\\\\Exception $e) {\\n        }\\n    }\\n ```\\n\\n#### 2-3 新建邮件发送模板\\n\\n``` php\\n// /resource/views/emailsnew_order_mail.blade.php\\n<div>你好，小程序商城收到新订单。</div>\\n<div>收货地址: {{$address}}</div>\\n<div>订单号: {{$order_number}}</div>\\n<div>商品名称: {{$goods_name}}</div>\\n<div>商品颜色: {{$goods_color}}</div>\\n<div>数量: {{$goods_num}}</div>\\n```\\n\\n## 四、开始测试\\n\\n开始之前，我们需要在命令行启动队列系统，队列在启动完成后会进入监听状态\\n\\n``` bash\\nphp artisan queue:listen\\n```\\n\\n## 五、运行队列进程\\n\\n``` bash\\nphp artisan queue:work\\n```\\n\\n## 六、配置 Supervisor\\n\\n测试完成后，邮件发送成功，表示你已经成功啦~\\n\\nbut，如果是在生产环境，就不可能是像开发时启动一下队列发送一次，肯定是要有一定的监听和触发机制，所以Supervisor登场了。\\n\\nsupervisord 是进程管理的服务端，常驻进程辅助干活\\nsupervisorctl 是客户端，用来执行查看、加载等命令\\n\\n具体请看[配置 Supervisor，linux下的队列进程管理服务端](https://juejin.im/post/6844903914039410695)",\n    "tagIds": "20,32",\n    "author": "菜头",\n    "authorAvatar": "http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif",\n    "weight": 1,\n    "type": 1,\n    "groupTimestamp": "1565878336520",\n    "cover": "https://logos-download.com/wp-content/uploads/2016/09/Laravel_logo_wordmark_logotype.png",\n    "categoryId": 2,\n    "created_at": "2023-11-06T14:17:09.000Z",\n    "updated_at": "2023-11-08T05:35:44.000Z",\n    "tagList": [\n        {\n            "id": 20,\n            "name": "PHP"\n        },\n        {\n            "id": 32,\n            "name": "Laravel"\n        }\n    ],\n    "createDate": "2019-08-15"\n}',tn=`{
    "id": 1,
    "title": "永远想念",
    "subTitle": "R·I·P",
    "link": null,
    "description": "关系密切的长辈驾鹤西去，看着与自己同一空间时间之下的生命悄然逝去，无力感袭来，好像除了接受现实自己便再也做不了什么，人类力量之渺小在此刻展露无疑。",
    "content": "很小的时候，父母便收拾行囊踏上了来莞求生之路。彼时尚未读书的我，并不知道父母此行一走意味着什么，我依旧爱着这个静谧又温馨的小县城，喜欢从小巷子的这一头“哒哒哒”无头苍蝇一样的疯跑到另一头，路上经过的人家，我都认识，每一家有多少个小朋友，哪个可以当我的“马仔”，哪个是零食小“ATM”，哪个是没劲的“小哭包”，我了如指掌。这条小巷的一砖一瓦，一草一木，组成了我在乡下短暂的童年时光。\\n\\n随着爸妈先一步去城里做生意谋生，我便被爷爷奶奶从小县城接到了乡下生活。和爷爷奶奶相处时间甚少，导致初来乍到的我怯生生，许久不曾的乖巧让我老实待了几天，但“混世魔王”的称号不是白来的，很快我的本性暴露无遗。饭点不爱吃饭、喜欢尿床、出门必踩狗屎...当然这些优秀品质是长大后爷爷奶奶和我说的，当时的我可意识不到。\\n\\n那时候的奶奶身子骨还很硬朗，做事风风火火，干练果断，十里八乡出了名的能干。奶奶不仅要顾着田里的芝麻，还要打点家中大小事务，买菜烧水做饭拜老爷样样不在话下。但却被我这个混世魔王难住了，每天，我都能给爷爷奶奶制造新的“惊喜”，二老平静的生活也因为我的到来，涟漪不断。\\n\\n在乡下的这几个月，我简直释放天性，好不自在。和奶奶也是天下第一好的（自封）！奶奶为我做的事情，我都记在心里。她会在有鱼为菜肴时，亲手将鱼刺一根根拨开，把鱼肉码在我的碗上；会在我平时出去疯玩的时候，将烧开的水，用两个杯子轮番倾倒，迅速晾凉，以便我回来能喝上一口凉白开；会在我熟睡的时候，用蒲扇在我身边一下一下的扇风，为我挡暑...\\n\\n直至几月后，爸妈来接我去城里，我在房间踌躇，舍不得爷爷奶奶。奶奶似乎看出来了，开玩笑似的说了句：哎呀，我们大魔王终于要离开了，奶奶又有清静日子过咯。\\n\\n随着这次和爸妈离开，往后的日子，便很少与爷爷奶奶连续的待上一些时日。过年匆匆相见，几顿饭下肚，便又匆匆别过，日子就这样从指缝溜走，转眼爷爷奶奶年过古稀，身体大不如前。\\n\\n人常说，永远不知道意外和明天那个先来到。初听时无意，再听已是局中人。前段时间看过一部日剧，大意是讲人这辈子只要行善积德，下辈子就能投胎做高阶动物。私心里希望您能做个无忧无虑的存在，无所谓高阶与否，无病无灾足以。",
    "tagIds": "",
    "author": "苍蝇馆长",
    "authorAvatar": "https://i.pinimg.com/originals/99/6c/f8/996cf873b3270a2249c3937b48b4faba.jpg",
    "weight": 1,
    "type": 2,
    "groupTimestamp": "1699397519307",
    "cover": "https://www.pngmart.com/files/12/Bob-Minion-PNG-Image.png",
    "categoryId": null,
    "created_at": "2023-11-07T23:54:04.000Z",
    "updated_at": "2023-11-08T05:12:36.000Z",
    "createDate": "2023-11-08"
}`;var g=typeof globalThis<"u"&&globalThis||typeof self<"u"&&self||typeof global<"u"&&global||{},m={searchParams:"URLSearchParams"in g,iterable:"Symbol"in g&&"iterator"in Symbol,blob:"FileReader"in g&&"Blob"in g&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in g,arrayBuffer:"ArrayBuffer"in g};function an(n){return n&&DataView.prototype.isPrototypeOf(n)}if(m.arrayBuffer)var rn=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],sn=ArrayBuffer.isView||function(n){return n&&rn.indexOf(Object.prototype.toString.call(n))>-1};function E(n){if(typeof n!="string"&&(n=String(n)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(n)||n==="")throw new TypeError('Invalid character in header field name: "'+n+'"');return n.toLowerCase()}function O(n){return typeof n!="string"&&(n=String(n)),n}function C(n){var e={next:function(){var a=n.shift();return{done:a===void 0,value:a}}};return m.iterable&&(e[Symbol.iterator]=function(){return e}),e}function u(n){this.map={},n instanceof u?n.forEach(function(e,a){this.append(a,e)},this):Array.isArray(n)?n.forEach(function(e){if(e.length!=2)throw new TypeError("Headers constructor: expected name/value pair to be length 2, found"+e.length);this.append(e[0],e[1])},this):n&&Object.getOwnPropertyNames(n).forEach(function(e){this.append(e,n[e])},this)}u.prototype.append=function(n,e){n=E(n),e=O(e);var a=this.map[n];this.map[n]=a?a+", "+e:e};u.prototype.delete=function(n){delete this.map[E(n)]};u.prototype.get=function(n){return n=E(n),this.has(n)?this.map[n]:null};u.prototype.has=function(n){return this.map.hasOwnProperty(E(n))};u.prototype.set=function(n,e){this.map[E(n)]=O(e)};u.prototype.forEach=function(n,e){for(var a in this.map)this.map.hasOwnProperty(a)&&n.call(e,this.map[a],a,this)};u.prototype.keys=function(){var n=[];return this.forEach(function(e,a){n.push(a)}),C(n)};u.prototype.values=function(){var n=[];return this.forEach(function(e){n.push(e)}),C(n)};u.prototype.entries=function(){var n=[];return this.forEach(function(e,a){n.push([a,e])}),C(n)};m.iterable&&(u.prototype[Symbol.iterator]=u.prototype.entries);function P(n){if(!n._noBody){if(n.bodyUsed)return Promise.reject(new TypeError("Already read"));n.bodyUsed=!0}}function k(n){return new Promise(function(e,a){n.onload=function(){e(n.result)},n.onerror=function(){a(n.error)}})}function on(n){var e=new FileReader,a=k(e);return e.readAsArrayBuffer(n),a}function ln(n){var e=new FileReader,a=k(e),t=/charset=([A-Za-z0-9_-]+)/.exec(n.type),r=t?t[1]:"utf-8";return e.readAsText(n,r),a}function cn(n){for(var e=new Uint8Array(n),a=new Array(e.length),t=0;t<e.length;t++)a[t]=String.fromCharCode(e[t]);return a.join("")}function L(n){if(n.slice)return n.slice(0);var e=new Uint8Array(n.byteLength);return e.set(new Uint8Array(n)),e.buffer}function $(){return this.bodyUsed=!1,this._initBody=function(n){this.bodyUsed=this.bodyUsed,this._bodyInit=n,n?typeof n=="string"?this._bodyText=n:m.blob&&Blob.prototype.isPrototypeOf(n)?this._bodyBlob=n:m.formData&&FormData.prototype.isPrototypeOf(n)?this._bodyFormData=n:m.searchParams&&URLSearchParams.prototype.isPrototypeOf(n)?this._bodyText=n.toString():m.arrayBuffer&&m.blob&&an(n)?(this._bodyArrayBuffer=L(n.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):m.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(n)||sn(n))?this._bodyArrayBuffer=L(n):this._bodyText=n=Object.prototype.toString.call(n):(this._noBody=!0,this._bodyText=""),this.headers.get("content-type")||(typeof n=="string"?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):m.searchParams&&URLSearchParams.prototype.isPrototypeOf(n)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},m.blob&&(this.blob=function(){var n=P(this);if(n)return n;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))}),this.arrayBuffer=function(){if(this._bodyArrayBuffer){var n=P(this);return n||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}else{if(m.blob)return this.blob().then(on);throw new Error("could not read as ArrayBuffer")}},this.text=function(){var n=P(this);if(n)return n;if(this._bodyBlob)return ln(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(cn(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},m.formData&&(this.formData=function(){return this.text().then(un)}),this.json=function(){return this.text().then(JSON.parse)},this}var dn=["CONNECT","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"];function fn(n){var e=n.toUpperCase();return dn.indexOf(e)>-1?e:n}function I(n,e){if(!(this instanceof I))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');e=e||{};var a=e.body;if(n instanceof I){if(n.bodyUsed)throw new TypeError("Already read");this.url=n.url,this.credentials=n.credentials,e.headers||(this.headers=new u(n.headers)),this.method=n.method,this.mode=n.mode,this.signal=n.signal,!a&&n._bodyInit!=null&&(a=n._bodyInit,n.bodyUsed=!0)}else this.url=String(n);if(this.credentials=e.credentials||this.credentials||"same-origin",(e.headers||!this.headers)&&(this.headers=new u(e.headers)),this.method=fn(e.method||this.method||"GET"),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal||function(){if("AbortController"in g){var i=new AbortController;return i.signal}}(),this.referrer=null,(this.method==="GET"||this.method==="HEAD")&&a)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(a),(this.method==="GET"||this.method==="HEAD")&&(e.cache==="no-store"||e.cache==="no-cache")){var t=/([?&])_=[^&]*/;if(t.test(this.url))this.url=this.url.replace(t,"$1_="+new Date().getTime());else{var r=/\?/;this.url+=(r.test(this.url)?"&":"?")+"_="+new Date().getTime()}}}I.prototype.clone=function(){return new I(this,{body:this._bodyInit})};function un(n){var e=new FormData;return n.trim().split("&").forEach(function(a){if(a){var t=a.split("="),r=t.shift().replace(/\+/g," "),i=t.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(i))}}),e}function gn(n){var e=new u,a=n.replace(/\r?\n[\t ]+/g," ");return a.split("\r").map(function(t){return t.indexOf(`
`)===0?t.substr(1,t.length):t}).forEach(function(t){var r=t.split(":"),i=r.shift().trim();if(i){var c=r.join(":").trim();try{e.append(i,c)}catch(l){console.warn("Response "+l.message)}}}),e}$.call(I.prototype);function y(n,e){if(!(this instanceof y))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');if(e||(e={}),this.type="default",this.status=e.status===void 0?200:e.status,this.status<200||this.status>599)throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");this.ok=this.status>=200&&this.status<300,this.statusText=e.statusText===void 0?"":""+e.statusText,this.headers=new u(e.headers),this.url=e.url||"",this._initBody(n)}$.call(y.prototype);y.prototype.clone=function(){return new y(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new u(this.headers),url:this.url})};y.error=function(){var n=new y(null,{status:200,statusText:""});return n.status=0,n.type="error",n};var pn=[301,302,303,307,308];y.redirect=function(n,e){if(pn.indexOf(e)===-1)throw new RangeError("Invalid status code");return new y(null,{status:e,headers:{location:n}})};var S=g.DOMException;try{new S}catch{S=function(e,a){this.message=e,this.name=a;var t=Error(e);this.stack=t.stack},S.prototype=Object.create(Error.prototype),S.prototype.constructor=S}function G(n,e){return new Promise(function(a,t){var r=new I(n,e);if(r.signal&&r.signal.aborted)return t(new S("Aborted","AbortError"));var i=new XMLHttpRequest;function c(){i.abort()}i.onload=function(){var s={statusText:i.statusText,headers:gn(i.getAllResponseHeaders()||"")};r.url.startsWith("file://")&&(i.status<200||i.status>599)?s.status=200:s.status=i.status,s.url="responseURL"in i?i.responseURL:s.headers.get("X-Request-URL");var d="response"in i?i.response:i.responseText;setTimeout(function(){a(new y(d,s))},0)},i.onerror=function(){setTimeout(function(){t(new TypeError("Network request failed"))},0)},i.ontimeout=function(){setTimeout(function(){t(new TypeError("Network request timed out"))},0)},i.onabort=function(){setTimeout(function(){t(new S("Aborted","AbortError"))},0)};function l(s){try{return s===""&&g.location.href?g.location.href:s}catch{return s}}if(i.open(r.method,l(r.url),!0),r.credentials==="include"?i.withCredentials=!0:r.credentials==="omit"&&(i.withCredentials=!1),"responseType"in i&&(m.blob?i.responseType="blob":m.arrayBuffer&&(i.responseType="arraybuffer")),e&&typeof e.headers=="object"&&!(e.headers instanceof u||g.Headers&&e.headers instanceof g.Headers)){var o=[];Object.getOwnPropertyNames(e.headers).forEach(function(s){o.push(E(s)),i.setRequestHeader(s,O(e.headers[s]))}),r.headers.forEach(function(s,d){o.indexOf(d)===-1&&i.setRequestHeader(d,s)})}else r.headers.forEach(function(s,d){i.setRequestHeader(d,s)});r.signal&&(r.signal.addEventListener("abort",c),i.onreadystatechange=function(){i.readyState===4&&r.signal.removeEventListener("abort",c)}),i.send(typeof r._bodyInit>"u"?null:r._bodyInit)})}G.polyfill=!0;g.fetch||(g.fetch=G,g.Headers=u,g.Request=I,g.Response=y);const mn=(n="",e=null)=>{let a="";if(e)for(let t in e)a+=`${a?"&":"?"}${t}=${e[t]}`;return`${n}${a}`};var H={exports:{}};(function(n,e){(function(a,t){n.exports=t()})(z,function(){var a={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};return function(t,r,i){var c=r.prototype,l=c.format;i.en.formats=a,c.format=function(o){o===void 0&&(o="YYYY-MM-DDTHH:mm:ssZ");var s=this.$locale().formats,d=function(p,f){return p.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,function(h,b,w){var X=w&&w.toUpperCase();return b||f[w]||a[w]||f[X].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(En,Y,W){return Y||W.slice(1)})})}(o,s===void 0?{}:s);return l.call(this,d)}}})})(H);var hn=H.exports;const bn=Z(hn);Q.extend(bn);var J=(n=>(n.GET="GET",n.POST="POST",n.PUT="PUT",n.PATCH="PATCH",n.DELETE="DELETE",n))(J||{});const xn="http://127.0.0.1:3232",yn=["POST","PUT","PATCH","DELETE"];let T=0;function A(){T===0&&!_().spinning&&_().$patch({spinning:!0}),T++}function x(){T--,T===0&&_().spinning&&_().$patch({spinning:!1})}function V(n,e){const a={};return Object.keys(n).forEach(t=>{a[t]=n[t]}),a}function vn(n,e){const a={500:{type:"exception",msg:"接口异常"},501:{type:"exception",msg:"接口异常"},502:{type:"exception",msg:"接口异常"},503:{type:"exception",msg:"接口异常"},401:{type:"noPrmission",msg:"没有访问权限"},403:{type:"refuse",msg:"接口拒绝访问"},404:{type:"notFound",msg:"接口链接不存在"},405:{type:"Method Not Allowed",msg:"server: 方法不允许"}};let t={};n&&n.status&&(t=a[Number(n.status)],n.status===408&&e&&e.abort()),N.error((t==null?void 0:t.msg)||"未知的异常")}class wn{async fetchHandler(e,a,t){A();let r=xn+e;const i=Object.assign({headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json"},method:"GET",timeout:1e4,mode:"cors",cache:"no-cache",params:{timeStamp:new Date().getTime()}},a);t&&(i.signal=t.signal);const c=i&&i.method&&yn.includes(i.method);i.params&&i.method&&(c?(i.body=JSON.stringify(V(i.params)),i.headers&&Reflect.set(i.headers,"Content-Type","application/json")):i.method==="GET"&&(r=mn(r,V(i.params))));try{const o=await(await Promise.race([fetch(r,i),new Promise((s,d)=>{setTimeout(()=>d({status:408,statusText:"请求超时，请稍后重试",url:e}),i.timeout)})])).json();return(o==null?void 0:o.resultCode)!==0&&N.error((o==null?void 0:o.resultMessage)||"接口请求出错"),await x(),o}catch(l){return x(),vn(l,t),l}}}const{fetchHandler:Sn}=new wn,D=async n=>{A();const e=await fetch(n);return await x(),e.json()},q=({url:n,param:e={},options:a={}})=>(e&&typeof e=="object"&&(a.params=e),a.method=J.POST,Sn(n,a)),v=R("article",{state:()=>({list:[],allArticles:[],articleAmount:0,tagAmount:0,categoryAmount:0,total:0,pageNo:1,pageSize:10,categoryId:null,tagId:null})}),j=R("note",{state:()=>({list:[],allNotes:[],noteAmount:0,total:0,pageNo:1,pageSize:10})}),F="/json/",Dn=async()=>{const n=await D(`${F}tags.json`);return v().$patch({tagAmount:n.length}),n},jn=async()=>{const n=await D(`${F}categories.json`);return v().$patch({categoryAmount:n.length}),n},_n=async()=>await D(`${F}count.json`),Tn=async()=>await D(`${F}blogInfo.json`),Fn=async n=>await D(n),Pn=()=>new Promise((n,e)=>{try{A();const a=Object.assign({"../../public/json/article/tech/2018/1.json":B,"../../public/json/article/tech/2019/4.json":U,"../../public/json/article/tech/2020/5.json":M}),t=[];for(let r in a)a[r]&&t.push(JSON.parse(a[r]));x(),n(t)}catch(a){x(),e(a)}}),On=()=>new Promise((n,e)=>{try{A();const a=[];let t=0;In({},!0).then(r=>{const i=JSON.parse(JSON.stringify(r));i.reverse();for(let c=i.length-1;c>=0;c--){for(let l=0;l<i[c].list.length&&(t++,a.push(i[c].list[l]),!(t>=3));l++);if(t>=3)break}}),x(),n(a)}catch(a){x(),e(a)}}),In=(n,e=!1)=>new Promise((a,t)=>{try{A();let r=[],i=[],c=0,l=0,o=0,s,d=0;if(e||v().$patch({categoryId:n.categoryId,tagId:n.tagId}),!v().allArticles.length||e){const p=[{date:"2023",list:Object.assign({"../../public/json/article/tech/2023/17.json":K})},{date:"2022",list:Object.assign({})},{date:"2021",list:Object.assign({})},{date:"2020",list:Object.assign({"../../public/json/article/tech/2020/5.json":M})},{date:"2019",list:Object.assign({"../../public/json/article/tech/2019/2.json":nn,"../../public/json/article/tech/2019/3.json":en,"../../public/json/article/tech/2019/4.json":U})},{date:"2018",list:Object.assign({"../../public/json/article/tech/2018/1.json":B})}];let f,h;p.forEach(b=>{if(d=Object.keys(b.list).length,d){l+=d,c+=d,s={date:b.date,list:[]},h={date:b.date,list:[]};for(let w in b.list)b.list[w]&&(f=JSON.parse(b.list[w]),h.list.push(f),e||(n.tagId&&!f.tagIds.split(",").includes(n.tagId+"")||n.categoryId&&Number(f.categoryId)!==Number(n.categoryId)?(l--,f="",r.length&&o===l&&r[r.length-1].push(JSON.parse(JSON.stringify(s)))):(o++,r.length||(r=[[]]),o>=n.pageSize&&o%n.pageSize===0?(s.list.push(f),r[r.length-1].push(JSON.parse(JSON.stringify(s))),r.push([]),s.list=[]):(s.list.push(f),o===l&&r[r.length-1].push(JSON.parse(JSON.stringify(s)))))));i.push(h)}}),e||v().$patch({list:r,total:l}),v().$patch({allArticles:i,articleAmount:c})}else v().allArticles.forEach(p=>{d=p.list.length,l+=d,s={date:p.date,list:[]},p.list.forEach(f=>{n.tagId&&!f.tagIds.split(",").includes(n.tagId+"")||n.categoryId&&Number(f.categoryId)!==Number(n.categoryId)?(l--,r.length&&o===l&&r[r.length-1].push(JSON.parse(JSON.stringify(s)))):(o++,r.length||(r=[[]]),o>=n.pageSize&&o%n.pageSize===0?(s.list.push(f),r[r.length-1].push(JSON.parse(JSON.stringify(s))),r.push([]),s.list=[]):(s.list.push(f),o===l&&r[r.length-1].push(JSON.parse(JSON.stringify(s)))))})}),v().$patch({list:r,total:l});x(),a(i)}catch(r){x(),t(r)}}),Cn=n=>new Promise((e,a)=>{try{A();let t=[],r=[],i=0,c=0,l=0,o,s=0;if(j().allNotes.length)j().allNotes.forEach(d=>{s=d.list.length,c+=s,o={date:d.date,list:[]},d.list.forEach(p=>{l++,t.length||(t=[[]]),l>=n.pageSize&&l%n.pageSize===0?(o.list.push(p),t[t.length-1].push(JSON.parse(JSON.stringify(o))),t.push([]),o.list=[]):(o.list.push(p),l===c&&t[t.length-1].push(JSON.parse(JSON.stringify(o))))})}),j().$patch({list:t,total:c});else{const d=[{date:"2023",list:Object.assign({"../../public/json/article/life/2023/1.json":tn})},{date:"2022",list:Object.assign({})},{date:"2021",list:Object.assign({})},{date:"2020",list:Object.assign({})},{date:"2019",list:Object.assign({})},{date:"2018",list:Object.assign({})}];let p,f;d.forEach(h=>{if(s=Object.keys(h.list).length,s){c+=s,i+=s,o={date:h.date,list:[]},f={date:h.date,list:[]};for(let b in h.list)h.list[b]&&(p=JSON.parse(h.list[b]),f.list.push(p),l++,t.length||(t=[[]]),l>=n.pageSize&&l%n.pageSize===0?(o.list.push(p),t[t.length-1].push(JSON.parse(JSON.stringify(o))),t.push([]),o.list=[]):(o.list.push(p),l===c&&t[t.length-1].push(JSON.parse(JSON.stringify(o)))));r.push(f)}}),j().$patch({list:t,total:c,allNotes:r,noteAmount:i})}x(),e(r)}catch(t){x(),a(t)}}),Ln=async n=>await q({url:"/admin/createArticle",param:n}),Vn=async n=>await q({url:"/admin/updateArticle",param:n});export{Dn as a,jn as b,_n as c,Pn as d,On as e,Tn as f,In as g,j as h,Cn as i,Vn as j,Ln as k,Fn as l,F as p,v as u};
